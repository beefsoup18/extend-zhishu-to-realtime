/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package wangzitian.realtime;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HangQing extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2948671790739163476L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HangQing\",\"namespace\":\"wangzitian.realtime\",\"fields\":[{\"name\":\"LocalTimeStamp\",\"type\":\"int\"},{\"name\":\"QuotationFlag\",\"type\":[\"string\",\"null\"]},{\"name\":\"PacketTimeStampSH\",\"type\":[\"long\",\"null\"]},{\"name\":\"Time\",\"type\":[\"long\",\"null\"]},{\"name\":\"Symbol\",\"type\":\"string\"},{\"name\":\"PreClosePrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"OpenPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"HighPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"LowPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"LastPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"ClosePrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"TradeStatus\",\"type\":[\"string\",\"null\"]},{\"name\":\"SecurityPhaseTag\",\"type\":[\"string\",\"null\"]},{\"name\":\"TotalNo\",\"type\":[\"long\",\"null\"]},{\"name\":\"TotalVolume\",\"type\":[\"double\",\"null\"]},{\"name\":\"TotalAmount\",\"type\":[\"double\",\"null\"]},{\"name\":\"TotalBuyOrderVolume\",\"type\":[\"double\",\"null\"]},{\"name\":\"WtAvgBuyPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"BondWtAvgBuyPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"TotalSellOrderVolume\",\"type\":[\"double\",\"null\"]},{\"name\":\"WtAvgSellPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"BongWtAvgSellPrice\",\"type\":[\"double\",\"null\"]},{\"name\":\"IOPV\",\"type\":[\"double\",\"null\"]},{\"name\":\"ETFBuyNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"ETFBuyVolume\",\"type\":[\"long\",\"null\"]},{\"name\":\"ETFBuyAmount\",\"type\":[\"double\",\"null\"]},{\"name\":\"ETFSellNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"ETFSellVolume\",\"type\":[\"long\",\"null\"]},{\"name\":\"ETFSellAmount\",\"type\":[\"double\",\"null\"]},{\"name\":\"YTM\",\"type\":[\"double\",\"null\"]},{\"name\":\"TotalWarrantExecVol\",\"type\":[\"long\",\"null\"]},{\"name\":\"WarrantDownLimit\",\"type\":[\"double\",\"null\"]},{\"name\":\"WarrantUpLimit\",\"type\":[\"double\",\"null\"]},{\"name\":\"WithdrawBuyNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"WithdrawBuyVolume\",\"type\":[\"long\",\"null\"]},{\"name\":\"WithdrawBuyAmount\",\"type\":[\"double\",\"null\"]},{\"name\":\"WithdrawSellNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"WithdrawSellVolume\",\"type\":[\"long\",\"null\"]},{\"name\":\"WithdrawSellAmount\",\"type\":[\"double\",\"null\"]},{\"name\":\"TotalBuyNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"TotalSellNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"MaxBuyDuration\",\"type\":[\"int\",\"null\"]},{\"name\":\"MaxSellDuration\",\"type\":[\"int\",\"null\"]},{\"name\":\"BuyOrderNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"SellOrderNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"SellLevelNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"SellLevel_price\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"SellLevel_TotalOrderNo\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"SellLevel_Volume\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"SellLevelQueueNo01\",\"type\":[\"int\",\"null\"]},{\"name\":\"SellLevelQueue\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"BuyLevelNo\",\"type\":[\"int\",\"null\"]},{\"name\":\"BuyLevel_price\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"BuyLevel_TotalOrderNo\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"BuyLevel_Volume\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"BuyLevelQueueNo01\",\"type\":[\"int\",\"null\"]},{\"name\":\"BuyLevelQueue\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"SymbolSource_SZ\",\"type\":[\"string\",\"null\"]},{\"name\":\"PriceUpLimit_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PriceDownLimit_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PriceUpdown1_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PriceUpdown2_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PERatio1_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"NAV_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PERatio2_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PRemiumRate_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"WtAvgRate_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"WtAvgRateUpdown_SZ\",\"type\":[\"double\",\"null\"]},{\"name\":\"PreWtAvgRate_SZ\",\"type\":[\"double\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<HangQing> ENCODER =
      new BinaryMessageEncoder<HangQing>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HangQing> DECODER =
      new BinaryMessageDecoder<HangQing>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<HangQing> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<HangQing> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<HangQing>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this HangQing to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a HangQing from a ByteBuffer. */
  public static HangQing fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int LocalTimeStamp;
  @Deprecated public CharSequence QuotationFlag;
  @Deprecated public Long PacketTimeStampSH;
  @Deprecated public Long Time;
  @Deprecated public CharSequence Symbol;
  @Deprecated public Double PreClosePrice;
  @Deprecated public Double OpenPrice;
  @Deprecated public Double HighPrice;
  @Deprecated public Double LowPrice;
  @Deprecated public Double LastPrice;
  @Deprecated public Double ClosePrice;
  @Deprecated public CharSequence TradeStatus;
  @Deprecated public CharSequence SecurityPhaseTag;
  @Deprecated public Long TotalNo;
  @Deprecated public Double TotalVolume;
  @Deprecated public Double TotalAmount;
  @Deprecated public Double TotalBuyOrderVolume;
  @Deprecated public Double WtAvgBuyPrice;
  @Deprecated public Double BondWtAvgBuyPrice;
  @Deprecated public Double TotalSellOrderVolume;
  @Deprecated public Double WtAvgSellPrice;
  @Deprecated public Double BongWtAvgSellPrice;
  @Deprecated public Double IOPV;
  @Deprecated public Integer ETFBuyNo;
  @Deprecated public Long ETFBuyVolume;
  @Deprecated public Double ETFBuyAmount;
  @Deprecated public Integer ETFSellNo;
  @Deprecated public Long ETFSellVolume;
  @Deprecated public Double ETFSellAmount;
  @Deprecated public Double YTM;
  @Deprecated public Long TotalWarrantExecVol;
  @Deprecated public Double WarrantDownLimit;
  @Deprecated public Double WarrantUpLimit;
  @Deprecated public Integer WithdrawBuyNo;
  @Deprecated public Long WithdrawBuyVolume;
  @Deprecated public Double WithdrawBuyAmount;
  @Deprecated public Integer WithdrawSellNo;
  @Deprecated public Long WithdrawSellVolume;
  @Deprecated public Double WithdrawSellAmount;
  @Deprecated public Integer TotalBuyNo;
  @Deprecated public Integer TotalSellNo;
  @Deprecated public Integer MaxBuyDuration;
  @Deprecated public Integer MaxSellDuration;
  @Deprecated public Integer BuyOrderNo;
  @Deprecated public Integer SellOrderNo;
  @Deprecated public Integer SellLevelNo;
  @Deprecated public java.util.List<Double> SellLevel_price;
  @Deprecated public java.util.List<Long> SellLevel_TotalOrderNo;
  @Deprecated public java.util.List<Double> SellLevel_Volume;
  @Deprecated public Integer SellLevelQueueNo01;
  @Deprecated public java.util.List<Double> SellLevelQueue;
  @Deprecated public Integer BuyLevelNo;
  @Deprecated public java.util.List<Double> BuyLevel_price;
  @Deprecated public java.util.List<Long> BuyLevel_TotalOrderNo;
  @Deprecated public java.util.List<Double> BuyLevel_Volume;
  @Deprecated public Integer BuyLevelQueueNo01;
  @Deprecated public java.util.List<Double> BuyLevelQueue;
  @Deprecated public CharSequence SymbolSource_SZ;
  @Deprecated public Double PriceUpLimit_SZ;
  @Deprecated public Double PriceDownLimit_SZ;
  @Deprecated public Double PriceUpdown1_SZ;
  @Deprecated public Double PriceUpdown2_SZ;
  @Deprecated public Double PERatio1_SZ;
  @Deprecated public Double NAV_SZ;
  @Deprecated public Double PERatio2_SZ;
  @Deprecated public Double PRemiumRate_SZ;
  @Deprecated public Double WtAvgRate_SZ;
  @Deprecated public Double WtAvgRateUpdown_SZ;
  @Deprecated public Double PreWtAvgRate_SZ;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HangQing() {}

  /**
   * All-args constructor.
   * @param LocalTimeStamp The new value for LocalTimeStamp
   * @param QuotationFlag The new value for QuotationFlag
   * @param PacketTimeStampSH The new value for PacketTimeStampSH
   * @param Time The new value for Time
   * @param Symbol The new value for Symbol
   * @param PreClosePrice The new value for PreClosePrice
   * @param OpenPrice The new value for OpenPrice
   * @param HighPrice The new value for HighPrice
   * @param LowPrice The new value for LowPrice
   * @param LastPrice The new value for LastPrice
   * @param ClosePrice The new value for ClosePrice
   * @param TradeStatus The new value for TradeStatus
   * @param SecurityPhaseTag The new value for SecurityPhaseTag
   * @param TotalNo The new value for TotalNo
   * @param TotalVolume The new value for TotalVolume
   * @param TotalAmount The new value for TotalAmount
   * @param TotalBuyOrderVolume The new value for TotalBuyOrderVolume
   * @param WtAvgBuyPrice The new value for WtAvgBuyPrice
   * @param BondWtAvgBuyPrice The new value for BondWtAvgBuyPrice
   * @param TotalSellOrderVolume The new value for TotalSellOrderVolume
   * @param WtAvgSellPrice The new value for WtAvgSellPrice
   * @param BongWtAvgSellPrice The new value for BongWtAvgSellPrice
   * @param IOPV The new value for IOPV
   * @param ETFBuyNo The new value for ETFBuyNo
   * @param ETFBuyVolume The new value for ETFBuyVolume
   * @param ETFBuyAmount The new value for ETFBuyAmount
   * @param ETFSellNo The new value for ETFSellNo
   * @param ETFSellVolume The new value for ETFSellVolume
   * @param ETFSellAmount The new value for ETFSellAmount
   * @param YTM The new value for YTM
   * @param TotalWarrantExecVol The new value for TotalWarrantExecVol
   * @param WarrantDownLimit The new value for WarrantDownLimit
   * @param WarrantUpLimit The new value for WarrantUpLimit
   * @param WithdrawBuyNo The new value for WithdrawBuyNo
   * @param WithdrawBuyVolume The new value for WithdrawBuyVolume
   * @param WithdrawBuyAmount The new value for WithdrawBuyAmount
   * @param WithdrawSellNo The new value for WithdrawSellNo
   * @param WithdrawSellVolume The new value for WithdrawSellVolume
   * @param WithdrawSellAmount The new value for WithdrawSellAmount
   * @param TotalBuyNo The new value for TotalBuyNo
   * @param TotalSellNo The new value for TotalSellNo
   * @param MaxBuyDuration The new value for MaxBuyDuration
   * @param MaxSellDuration The new value for MaxSellDuration
   * @param BuyOrderNo The new value for BuyOrderNo
   * @param SellOrderNo The new value for SellOrderNo
   * @param SellLevelNo The new value for SellLevelNo
   * @param SellLevel_price The new value for SellLevel_price
   * @param SellLevel_TotalOrderNo The new value for SellLevel_TotalOrderNo
   * @param SellLevel_Volume The new value for SellLevel_Volume
   * @param SellLevelQueueNo01 The new value for SellLevelQueueNo01
   * @param SellLevelQueue The new value for SellLevelQueue
   * @param BuyLevelNo The new value for BuyLevelNo
   * @param BuyLevel_price The new value for BuyLevel_price
   * @param BuyLevel_TotalOrderNo The new value for BuyLevel_TotalOrderNo
   * @param BuyLevel_Volume The new value for BuyLevel_Volume
   * @param BuyLevelQueueNo01 The new value for BuyLevelQueueNo01
   * @param BuyLevelQueue The new value for BuyLevelQueue
   * @param SymbolSource_SZ The new value for SymbolSource_SZ
   * @param PriceUpLimit_SZ The new value for PriceUpLimit_SZ
   * @param PriceDownLimit_SZ The new value for PriceDownLimit_SZ
   * @param PriceUpdown1_SZ The new value for PriceUpdown1_SZ
   * @param PriceUpdown2_SZ The new value for PriceUpdown2_SZ
   * @param PERatio1_SZ The new value for PERatio1_SZ
   * @param NAV_SZ The new value for NAV_SZ
   * @param PERatio2_SZ The new value for PERatio2_SZ
   * @param PRemiumRate_SZ The new value for PRemiumRate_SZ
   * @param WtAvgRate_SZ The new value for WtAvgRate_SZ
   * @param WtAvgRateUpdown_SZ The new value for WtAvgRateUpdown_SZ
   * @param PreWtAvgRate_SZ The new value for PreWtAvgRate_SZ
   */
  public HangQing(Integer LocalTimeStamp, CharSequence QuotationFlag, Long PacketTimeStampSH, Long Time, CharSequence Symbol, Double PreClosePrice, Double OpenPrice, Double HighPrice, Double LowPrice, Double LastPrice, Double ClosePrice, CharSequence TradeStatus, CharSequence SecurityPhaseTag, Long TotalNo, Double TotalVolume, Double TotalAmount, Double TotalBuyOrderVolume, Double WtAvgBuyPrice, Double BondWtAvgBuyPrice, Double TotalSellOrderVolume, Double WtAvgSellPrice, Double BongWtAvgSellPrice, Double IOPV, Integer ETFBuyNo, Long ETFBuyVolume, Double ETFBuyAmount, Integer ETFSellNo, Long ETFSellVolume, Double ETFSellAmount, Double YTM, Long TotalWarrantExecVol, Double WarrantDownLimit, Double WarrantUpLimit, Integer WithdrawBuyNo, Long WithdrawBuyVolume, Double WithdrawBuyAmount, Integer WithdrawSellNo, Long WithdrawSellVolume, Double WithdrawSellAmount, Integer TotalBuyNo, Integer TotalSellNo, Integer MaxBuyDuration, Integer MaxSellDuration, Integer BuyOrderNo, Integer SellOrderNo, Integer SellLevelNo, java.util.List<Double> SellLevel_price, java.util.List<Long> SellLevel_TotalOrderNo, java.util.List<Double> SellLevel_Volume, Integer SellLevelQueueNo01, java.util.List<Double> SellLevelQueue, Integer BuyLevelNo, java.util.List<Double> BuyLevel_price, java.util.List<Long> BuyLevel_TotalOrderNo, java.util.List<Double> BuyLevel_Volume, Integer BuyLevelQueueNo01, java.util.List<Double> BuyLevelQueue, CharSequence SymbolSource_SZ, Double PriceUpLimit_SZ, Double PriceDownLimit_SZ, Double PriceUpdown1_SZ, Double PriceUpdown2_SZ, Double PERatio1_SZ, Double NAV_SZ, Double PERatio2_SZ, Double PRemiumRate_SZ, Double WtAvgRate_SZ, Double WtAvgRateUpdown_SZ, Double PreWtAvgRate_SZ) {
    this.LocalTimeStamp = LocalTimeStamp;
    this.QuotationFlag = QuotationFlag;
    this.PacketTimeStampSH = PacketTimeStampSH;
    this.Time = Time;
    this.Symbol = Symbol;
    this.PreClosePrice = PreClosePrice;
    this.OpenPrice = OpenPrice;
    this.HighPrice = HighPrice;
    this.LowPrice = LowPrice;
    this.LastPrice = LastPrice;
    this.ClosePrice = ClosePrice;
    this.TradeStatus = TradeStatus;
    this.SecurityPhaseTag = SecurityPhaseTag;
    this.TotalNo = TotalNo;
    this.TotalVolume = TotalVolume;
    this.TotalAmount = TotalAmount;
    this.TotalBuyOrderVolume = TotalBuyOrderVolume;
    this.WtAvgBuyPrice = WtAvgBuyPrice;
    this.BondWtAvgBuyPrice = BondWtAvgBuyPrice;
    this.TotalSellOrderVolume = TotalSellOrderVolume;
    this.WtAvgSellPrice = WtAvgSellPrice;
    this.BongWtAvgSellPrice = BongWtAvgSellPrice;
    this.IOPV = IOPV;
    this.ETFBuyNo = ETFBuyNo;
    this.ETFBuyVolume = ETFBuyVolume;
    this.ETFBuyAmount = ETFBuyAmount;
    this.ETFSellNo = ETFSellNo;
    this.ETFSellVolume = ETFSellVolume;
    this.ETFSellAmount = ETFSellAmount;
    this.YTM = YTM;
    this.TotalWarrantExecVol = TotalWarrantExecVol;
    this.WarrantDownLimit = WarrantDownLimit;
    this.WarrantUpLimit = WarrantUpLimit;
    this.WithdrawBuyNo = WithdrawBuyNo;
    this.WithdrawBuyVolume = WithdrawBuyVolume;
    this.WithdrawBuyAmount = WithdrawBuyAmount;
    this.WithdrawSellNo = WithdrawSellNo;
    this.WithdrawSellVolume = WithdrawSellVolume;
    this.WithdrawSellAmount = WithdrawSellAmount;
    this.TotalBuyNo = TotalBuyNo;
    this.TotalSellNo = TotalSellNo;
    this.MaxBuyDuration = MaxBuyDuration;
    this.MaxSellDuration = MaxSellDuration;
    this.BuyOrderNo = BuyOrderNo;
    this.SellOrderNo = SellOrderNo;
    this.SellLevelNo = SellLevelNo;
    this.SellLevel_price = SellLevel_price;
    this.SellLevel_TotalOrderNo = SellLevel_TotalOrderNo;
    this.SellLevel_Volume = SellLevel_Volume;
    this.SellLevelQueueNo01 = SellLevelQueueNo01;
    this.SellLevelQueue = SellLevelQueue;
    this.BuyLevelNo = BuyLevelNo;
    this.BuyLevel_price = BuyLevel_price;
    this.BuyLevel_TotalOrderNo = BuyLevel_TotalOrderNo;
    this.BuyLevel_Volume = BuyLevel_Volume;
    this.BuyLevelQueueNo01 = BuyLevelQueueNo01;
    this.BuyLevelQueue = BuyLevelQueue;
    this.SymbolSource_SZ = SymbolSource_SZ;
    this.PriceUpLimit_SZ = PriceUpLimit_SZ;
    this.PriceDownLimit_SZ = PriceDownLimit_SZ;
    this.PriceUpdown1_SZ = PriceUpdown1_SZ;
    this.PriceUpdown2_SZ = PriceUpdown2_SZ;
    this.PERatio1_SZ = PERatio1_SZ;
    this.NAV_SZ = NAV_SZ;
    this.PERatio2_SZ = PERatio2_SZ;
    this.PRemiumRate_SZ = PRemiumRate_SZ;
    this.WtAvgRate_SZ = WtAvgRate_SZ;
    this.WtAvgRateUpdown_SZ = WtAvgRateUpdown_SZ;
    this.PreWtAvgRate_SZ = PreWtAvgRate_SZ;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return LocalTimeStamp;
    case 1: return QuotationFlag;
    case 2: return PacketTimeStampSH;
    case 3: return Time;
    case 4: return Symbol;
    case 5: return PreClosePrice;
    case 6: return OpenPrice;
    case 7: return HighPrice;
    case 8: return LowPrice;
    case 9: return LastPrice;
    case 10: return ClosePrice;
    case 11: return TradeStatus;
    case 12: return SecurityPhaseTag;
    case 13: return TotalNo;
    case 14: return TotalVolume;
    case 15: return TotalAmount;
    case 16: return TotalBuyOrderVolume;
    case 17: return WtAvgBuyPrice;
    case 18: return BondWtAvgBuyPrice;
    case 19: return TotalSellOrderVolume;
    case 20: return WtAvgSellPrice;
    case 21: return BongWtAvgSellPrice;
    case 22: return IOPV;
    case 23: return ETFBuyNo;
    case 24: return ETFBuyVolume;
    case 25: return ETFBuyAmount;
    case 26: return ETFSellNo;
    case 27: return ETFSellVolume;
    case 28: return ETFSellAmount;
    case 29: return YTM;
    case 30: return TotalWarrantExecVol;
    case 31: return WarrantDownLimit;
    case 32: return WarrantUpLimit;
    case 33: return WithdrawBuyNo;
    case 34: return WithdrawBuyVolume;
    case 35: return WithdrawBuyAmount;
    case 36: return WithdrawSellNo;
    case 37: return WithdrawSellVolume;
    case 38: return WithdrawSellAmount;
    case 39: return TotalBuyNo;
    case 40: return TotalSellNo;
    case 41: return MaxBuyDuration;
    case 42: return MaxSellDuration;
    case 43: return BuyOrderNo;
    case 44: return SellOrderNo;
    case 45: return SellLevelNo;
    case 46: return SellLevel_price;
    case 47: return SellLevel_TotalOrderNo;
    case 48: return SellLevel_Volume;
    case 49: return SellLevelQueueNo01;
    case 50: return SellLevelQueue;
    case 51: return BuyLevelNo;
    case 52: return BuyLevel_price;
    case 53: return BuyLevel_TotalOrderNo;
    case 54: return BuyLevel_Volume;
    case 55: return BuyLevelQueueNo01;
    case 56: return BuyLevelQueue;
    case 57: return SymbolSource_SZ;
    case 58: return PriceUpLimit_SZ;
    case 59: return PriceDownLimit_SZ;
    case 60: return PriceUpdown1_SZ;
    case 61: return PriceUpdown2_SZ;
    case 62: return PERatio1_SZ;
    case 63: return NAV_SZ;
    case 64: return PERatio2_SZ;
    case 65: return PRemiumRate_SZ;
    case 66: return WtAvgRate_SZ;
    case 67: return WtAvgRateUpdown_SZ;
    case 68: return PreWtAvgRate_SZ;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: LocalTimeStamp = (Integer)value$; break;
    case 1: QuotationFlag = (CharSequence)value$; break;
    case 2: PacketTimeStampSH = (Long)value$; break;
    case 3: Time = (Long)value$; break;
    case 4: Symbol = (CharSequence)value$; break;
    case 5: PreClosePrice = (Double)value$; break;
    case 6: OpenPrice = (Double)value$; break;
    case 7: HighPrice = (Double)value$; break;
    case 8: LowPrice = (Double)value$; break;
    case 9: LastPrice = (Double)value$; break;
    case 10: ClosePrice = (Double)value$; break;
    case 11: TradeStatus = (CharSequence)value$; break;
    case 12: SecurityPhaseTag = (CharSequence)value$; break;
    case 13: TotalNo = (Long)value$; break;
    case 14: TotalVolume = (Double)value$; break;
    case 15: TotalAmount = (Double)value$; break;
    case 16: TotalBuyOrderVolume = (Double)value$; break;
    case 17: WtAvgBuyPrice = (Double)value$; break;
    case 18: BondWtAvgBuyPrice = (Double)value$; break;
    case 19: TotalSellOrderVolume = (Double)value$; break;
    case 20: WtAvgSellPrice = (Double)value$; break;
    case 21: BongWtAvgSellPrice = (Double)value$; break;
    case 22: IOPV = (Double)value$; break;
    case 23: ETFBuyNo = (Integer)value$; break;
    case 24: ETFBuyVolume = (Long)value$; break;
    case 25: ETFBuyAmount = (Double)value$; break;
    case 26: ETFSellNo = (Integer)value$; break;
    case 27: ETFSellVolume = (Long)value$; break;
    case 28: ETFSellAmount = (Double)value$; break;
    case 29: YTM = (Double)value$; break;
    case 30: TotalWarrantExecVol = (Long)value$; break;
    case 31: WarrantDownLimit = (Double)value$; break;
    case 32: WarrantUpLimit = (Double)value$; break;
    case 33: WithdrawBuyNo = (Integer)value$; break;
    case 34: WithdrawBuyVolume = (Long)value$; break;
    case 35: WithdrawBuyAmount = (Double)value$; break;
    case 36: WithdrawSellNo = (Integer)value$; break;
    case 37: WithdrawSellVolume = (Long)value$; break;
    case 38: WithdrawSellAmount = (Double)value$; break;
    case 39: TotalBuyNo = (Integer)value$; break;
    case 40: TotalSellNo = (Integer)value$; break;
    case 41: MaxBuyDuration = (Integer)value$; break;
    case 42: MaxSellDuration = (Integer)value$; break;
    case 43: BuyOrderNo = (Integer)value$; break;
    case 44: SellOrderNo = (Integer)value$; break;
    case 45: SellLevelNo = (Integer)value$; break;
    case 46: SellLevel_price = (java.util.List<Double>)value$; break;
    case 47: SellLevel_TotalOrderNo = (java.util.List<Long>)value$; break;
    case 48: SellLevel_Volume = (java.util.List<Double>)value$; break;
    case 49: SellLevelQueueNo01 = (Integer)value$; break;
    case 50: SellLevelQueue = (java.util.List<Double>)value$; break;
    case 51: BuyLevelNo = (Integer)value$; break;
    case 52: BuyLevel_price = (java.util.List<Double>)value$; break;
    case 53: BuyLevel_TotalOrderNo = (java.util.List<Long>)value$; break;
    case 54: BuyLevel_Volume = (java.util.List<Double>)value$; break;
    case 55: BuyLevelQueueNo01 = (Integer)value$; break;
    case 56: BuyLevelQueue = (java.util.List<Double>)value$; break;
    case 57: SymbolSource_SZ = (CharSequence)value$; break;
    case 58: PriceUpLimit_SZ = (Double)value$; break;
    case 59: PriceDownLimit_SZ = (Double)value$; break;
    case 60: PriceUpdown1_SZ = (Double)value$; break;
    case 61: PriceUpdown2_SZ = (Double)value$; break;
    case 62: PERatio1_SZ = (Double)value$; break;
    case 63: NAV_SZ = (Double)value$; break;
    case 64: PERatio2_SZ = (Double)value$; break;
    case 65: PRemiumRate_SZ = (Double)value$; break;
    case 66: WtAvgRate_SZ = (Double)value$; break;
    case 67: WtAvgRateUpdown_SZ = (Double)value$; break;
    case 68: PreWtAvgRate_SZ = (Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'LocalTimeStamp' field.
   * @return The value of the 'LocalTimeStamp' field.
   */
  public Integer getLocalTimeStamp() {
    return LocalTimeStamp;
  }

  /**
   * Sets the value of the 'LocalTimeStamp' field.
   * @param value the value to set.
   */
  public void setLocalTimeStamp(Integer value) {
    this.LocalTimeStamp = value;
  }

  /**
   * Gets the value of the 'QuotationFlag' field.
   * @return The value of the 'QuotationFlag' field.
   */
  public CharSequence getQuotationFlag() {
    return QuotationFlag;
  }

  /**
   * Sets the value of the 'QuotationFlag' field.
   * @param value the value to set.
   */
  public void setQuotationFlag(CharSequence value) {
    this.QuotationFlag = value;
  }

  /**
   * Gets the value of the 'PacketTimeStampSH' field.
   * @return The value of the 'PacketTimeStampSH' field.
   */
  public Long getPacketTimeStampSH() {
    return PacketTimeStampSH;
  }

  /**
   * Sets the value of the 'PacketTimeStampSH' field.
   * @param value the value to set.
   */
  public void setPacketTimeStampSH(Long value) {
    this.PacketTimeStampSH = value;
  }

  /**
   * Gets the value of the 'Time' field.
   * @return The value of the 'Time' field.
   */
  public Long getTime() {
    return Time;
  }

  /**
   * Sets the value of the 'Time' field.
   * @param value the value to set.
   */
  public void setTime(Long value) {
    this.Time = value;
  }

  /**
   * Gets the value of the 'Symbol' field.
   * @return The value of the 'Symbol' field.
   */
  public CharSequence getSymbol() {
    return Symbol;
  }

  /**
   * Sets the value of the 'Symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(CharSequence value) {
    this.Symbol = value;
  }

  /**
   * Gets the value of the 'PreClosePrice' field.
   * @return The value of the 'PreClosePrice' field.
   */
  public Double getPreClosePrice() {
    return PreClosePrice;
  }

  /**
   * Sets the value of the 'PreClosePrice' field.
   * @param value the value to set.
   */
  public void setPreClosePrice(Double value) {
    this.PreClosePrice = value;
  }

  /**
   * Gets the value of the 'OpenPrice' field.
   * @return The value of the 'OpenPrice' field.
   */
  public Double getOpenPrice() {
    return OpenPrice;
  }

  /**
   * Sets the value of the 'OpenPrice' field.
   * @param value the value to set.
   */
  public void setOpenPrice(Double value) {
    this.OpenPrice = value;
  }

  /**
   * Gets the value of the 'HighPrice' field.
   * @return The value of the 'HighPrice' field.
   */
  public Double getHighPrice() {
    return HighPrice;
  }

  /**
   * Sets the value of the 'HighPrice' field.
   * @param value the value to set.
   */
  public void setHighPrice(Double value) {
    this.HighPrice = value;
  }

  /**
   * Gets the value of the 'LowPrice' field.
   * @return The value of the 'LowPrice' field.
   */
  public Double getLowPrice() {
    return LowPrice;
  }

  /**
   * Sets the value of the 'LowPrice' field.
   * @param value the value to set.
   */
  public void setLowPrice(Double value) {
    this.LowPrice = value;
  }

  /**
   * Gets the value of the 'LastPrice' field.
   * @return The value of the 'LastPrice' field.
   */
  public Double getLastPrice() {
    return LastPrice;
  }

  /**
   * Sets the value of the 'LastPrice' field.
   * @param value the value to set.
   */
  public void setLastPrice(Double value) {
    this.LastPrice = value;
  }

  /**
   * Gets the value of the 'ClosePrice' field.
   * @return The value of the 'ClosePrice' field.
   */
  public Double getClosePrice() {
    return ClosePrice;
  }

  /**
   * Sets the value of the 'ClosePrice' field.
   * @param value the value to set.
   */
  public void setClosePrice(Double value) {
    this.ClosePrice = value;
  }

  /**
   * Gets the value of the 'TradeStatus' field.
   * @return The value of the 'TradeStatus' field.
   */
  public CharSequence getTradeStatus() {
    return TradeStatus;
  }

  /**
   * Sets the value of the 'TradeStatus' field.
   * @param value the value to set.
   */
  public void setTradeStatus(CharSequence value) {
    this.TradeStatus = value;
  }

  /**
   * Gets the value of the 'SecurityPhaseTag' field.
   * @return The value of the 'SecurityPhaseTag' field.
   */
  public CharSequence getSecurityPhaseTag() {
    return SecurityPhaseTag;
  }

  /**
   * Sets the value of the 'SecurityPhaseTag' field.
   * @param value the value to set.
   */
  public void setSecurityPhaseTag(CharSequence value) {
    this.SecurityPhaseTag = value;
  }

  /**
   * Gets the value of the 'TotalNo' field.
   * @return The value of the 'TotalNo' field.
   */
  public Long getTotalNo() {
    return TotalNo;
  }

  /**
   * Sets the value of the 'TotalNo' field.
   * @param value the value to set.
   */
  public void setTotalNo(Long value) {
    this.TotalNo = value;
  }

  /**
   * Gets the value of the 'TotalVolume' field.
   * @return The value of the 'TotalVolume' field.
   */
  public Double getTotalVolume() {
    return TotalVolume;
  }

  /**
   * Sets the value of the 'TotalVolume' field.
   * @param value the value to set.
   */
  public void setTotalVolume(Double value) {
    this.TotalVolume = value;
  }

  /**
   * Gets the value of the 'TotalAmount' field.
   * @return The value of the 'TotalAmount' field.
   */
  public Double getTotalAmount() {
    return TotalAmount;
  }

  /**
   * Sets the value of the 'TotalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(Double value) {
    this.TotalAmount = value;
  }

  /**
   * Gets the value of the 'TotalBuyOrderVolume' field.
   * @return The value of the 'TotalBuyOrderVolume' field.
   */
  public Double getTotalBuyOrderVolume() {
    return TotalBuyOrderVolume;
  }

  /**
   * Sets the value of the 'TotalBuyOrderVolume' field.
   * @param value the value to set.
   */
  public void setTotalBuyOrderVolume(Double value) {
    this.TotalBuyOrderVolume = value;
  }

  /**
   * Gets the value of the 'WtAvgBuyPrice' field.
   * @return The value of the 'WtAvgBuyPrice' field.
   */
  public Double getWtAvgBuyPrice() {
    return WtAvgBuyPrice;
  }

  /**
   * Sets the value of the 'WtAvgBuyPrice' field.
   * @param value the value to set.
   */
  public void setWtAvgBuyPrice(Double value) {
    this.WtAvgBuyPrice = value;
  }

  /**
   * Gets the value of the 'BondWtAvgBuyPrice' field.
   * @return The value of the 'BondWtAvgBuyPrice' field.
   */
  public Double getBondWtAvgBuyPrice() {
    return BondWtAvgBuyPrice;
  }

  /**
   * Sets the value of the 'BondWtAvgBuyPrice' field.
   * @param value the value to set.
   */
  public void setBondWtAvgBuyPrice(Double value) {
    this.BondWtAvgBuyPrice = value;
  }

  /**
   * Gets the value of the 'TotalSellOrderVolume' field.
   * @return The value of the 'TotalSellOrderVolume' field.
   */
  public Double getTotalSellOrderVolume() {
    return TotalSellOrderVolume;
  }

  /**
   * Sets the value of the 'TotalSellOrderVolume' field.
   * @param value the value to set.
   */
  public void setTotalSellOrderVolume(Double value) {
    this.TotalSellOrderVolume = value;
  }

  /**
   * Gets the value of the 'WtAvgSellPrice' field.
   * @return The value of the 'WtAvgSellPrice' field.
   */
  public Double getWtAvgSellPrice() {
    return WtAvgSellPrice;
  }

  /**
   * Sets the value of the 'WtAvgSellPrice' field.
   * @param value the value to set.
   */
  public void setWtAvgSellPrice(Double value) {
    this.WtAvgSellPrice = value;
  }

  /**
   * Gets the value of the 'BongWtAvgSellPrice' field.
   * @return The value of the 'BongWtAvgSellPrice' field.
   */
  public Double getBongWtAvgSellPrice() {
    return BongWtAvgSellPrice;
  }

  /**
   * Sets the value of the 'BongWtAvgSellPrice' field.
   * @param value the value to set.
   */
  public void setBongWtAvgSellPrice(Double value) {
    this.BongWtAvgSellPrice = value;
  }

  /**
   * Gets the value of the 'IOPV' field.
   * @return The value of the 'IOPV' field.
   */
  public Double getIOPV() {
    return IOPV;
  }

  /**
   * Sets the value of the 'IOPV' field.
   * @param value the value to set.
   */
  public void setIOPV(Double value) {
    this.IOPV = value;
  }

  /**
   * Gets the value of the 'ETFBuyNo' field.
   * @return The value of the 'ETFBuyNo' field.
   */
  public Integer getETFBuyNo() {
    return ETFBuyNo;
  }

  /**
   * Sets the value of the 'ETFBuyNo' field.
   * @param value the value to set.
   */
  public void setETFBuyNo(Integer value) {
    this.ETFBuyNo = value;
  }

  /**
   * Gets the value of the 'ETFBuyVolume' field.
   * @return The value of the 'ETFBuyVolume' field.
   */
  public Long getETFBuyVolume() {
    return ETFBuyVolume;
  }

  /**
   * Sets the value of the 'ETFBuyVolume' field.
   * @param value the value to set.
   */
  public void setETFBuyVolume(Long value) {
    this.ETFBuyVolume = value;
  }

  /**
   * Gets the value of the 'ETFBuyAmount' field.
   * @return The value of the 'ETFBuyAmount' field.
   */
  public Double getETFBuyAmount() {
    return ETFBuyAmount;
  }

  /**
   * Sets the value of the 'ETFBuyAmount' field.
   * @param value the value to set.
   */
  public void setETFBuyAmount(Double value) {
    this.ETFBuyAmount = value;
  }

  /**
   * Gets the value of the 'ETFSellNo' field.
   * @return The value of the 'ETFSellNo' field.
   */
  public Integer getETFSellNo() {
    return ETFSellNo;
  }

  /**
   * Sets the value of the 'ETFSellNo' field.
   * @param value the value to set.
   */
  public void setETFSellNo(Integer value) {
    this.ETFSellNo = value;
  }

  /**
   * Gets the value of the 'ETFSellVolume' field.
   * @return The value of the 'ETFSellVolume' field.
   */
  public Long getETFSellVolume() {
    return ETFSellVolume;
  }

  /**
   * Sets the value of the 'ETFSellVolume' field.
   * @param value the value to set.
   */
  public void setETFSellVolume(Long value) {
    this.ETFSellVolume = value;
  }

  /**
   * Gets the value of the 'ETFSellAmount' field.
   * @return The value of the 'ETFSellAmount' field.
   */
  public Double getETFSellAmount() {
    return ETFSellAmount;
  }

  /**
   * Sets the value of the 'ETFSellAmount' field.
   * @param value the value to set.
   */
  public void setETFSellAmount(Double value) {
    this.ETFSellAmount = value;
  }

  /**
   * Gets the value of the 'YTM' field.
   * @return The value of the 'YTM' field.
   */
  public Double getYTM() {
    return YTM;
  }

  /**
   * Sets the value of the 'YTM' field.
   * @param value the value to set.
   */
  public void setYTM(Double value) {
    this.YTM = value;
  }

  /**
   * Gets the value of the 'TotalWarrantExecVol' field.
   * @return The value of the 'TotalWarrantExecVol' field.
   */
  public Long getTotalWarrantExecVol() {
    return TotalWarrantExecVol;
  }

  /**
   * Sets the value of the 'TotalWarrantExecVol' field.
   * @param value the value to set.
   */
  public void setTotalWarrantExecVol(Long value) {
    this.TotalWarrantExecVol = value;
  }

  /**
   * Gets the value of the 'WarrantDownLimit' field.
   * @return The value of the 'WarrantDownLimit' field.
   */
  public Double getWarrantDownLimit() {
    return WarrantDownLimit;
  }

  /**
   * Sets the value of the 'WarrantDownLimit' field.
   * @param value the value to set.
   */
  public void setWarrantDownLimit(Double value) {
    this.WarrantDownLimit = value;
  }

  /**
   * Gets the value of the 'WarrantUpLimit' field.
   * @return The value of the 'WarrantUpLimit' field.
   */
  public Double getWarrantUpLimit() {
    return WarrantUpLimit;
  }

  /**
   * Sets the value of the 'WarrantUpLimit' field.
   * @param value the value to set.
   */
  public void setWarrantUpLimit(Double value) {
    this.WarrantUpLimit = value;
  }

  /**
   * Gets the value of the 'WithdrawBuyNo' field.
   * @return The value of the 'WithdrawBuyNo' field.
   */
  public Integer getWithdrawBuyNo() {
    return WithdrawBuyNo;
  }

  /**
   * Sets the value of the 'WithdrawBuyNo' field.
   * @param value the value to set.
   */
  public void setWithdrawBuyNo(Integer value) {
    this.WithdrawBuyNo = value;
  }

  /**
   * Gets the value of the 'WithdrawBuyVolume' field.
   * @return The value of the 'WithdrawBuyVolume' field.
   */
  public Long getWithdrawBuyVolume() {
    return WithdrawBuyVolume;
  }

  /**
   * Sets the value of the 'WithdrawBuyVolume' field.
   * @param value the value to set.
   */
  public void setWithdrawBuyVolume(Long value) {
    this.WithdrawBuyVolume = value;
  }

  /**
   * Gets the value of the 'WithdrawBuyAmount' field.
   * @return The value of the 'WithdrawBuyAmount' field.
   */
  public Double getWithdrawBuyAmount() {
    return WithdrawBuyAmount;
  }

  /**
   * Sets the value of the 'WithdrawBuyAmount' field.
   * @param value the value to set.
   */
  public void setWithdrawBuyAmount(Double value) {
    this.WithdrawBuyAmount = value;
  }

  /**
   * Gets the value of the 'WithdrawSellNo' field.
   * @return The value of the 'WithdrawSellNo' field.
   */
  public Integer getWithdrawSellNo() {
    return WithdrawSellNo;
  }

  /**
   * Sets the value of the 'WithdrawSellNo' field.
   * @param value the value to set.
   */
  public void setWithdrawSellNo(Integer value) {
    this.WithdrawSellNo = value;
  }

  /**
   * Gets the value of the 'WithdrawSellVolume' field.
   * @return The value of the 'WithdrawSellVolume' field.
   */
  public Long getWithdrawSellVolume() {
    return WithdrawSellVolume;
  }

  /**
   * Sets the value of the 'WithdrawSellVolume' field.
   * @param value the value to set.
   */
  public void setWithdrawSellVolume(Long value) {
    this.WithdrawSellVolume = value;
  }

  /**
   * Gets the value of the 'WithdrawSellAmount' field.
   * @return The value of the 'WithdrawSellAmount' field.
   */
  public Double getWithdrawSellAmount() {
    return WithdrawSellAmount;
  }

  /**
   * Sets the value of the 'WithdrawSellAmount' field.
   * @param value the value to set.
   */
  public void setWithdrawSellAmount(Double value) {
    this.WithdrawSellAmount = value;
  }

  /**
   * Gets the value of the 'TotalBuyNo' field.
   * @return The value of the 'TotalBuyNo' field.
   */
  public Integer getTotalBuyNo() {
    return TotalBuyNo;
  }

  /**
   * Sets the value of the 'TotalBuyNo' field.
   * @param value the value to set.
   */
  public void setTotalBuyNo(Integer value) {
    this.TotalBuyNo = value;
  }

  /**
   * Gets the value of the 'TotalSellNo' field.
   * @return The value of the 'TotalSellNo' field.
   */
  public Integer getTotalSellNo() {
    return TotalSellNo;
  }

  /**
   * Sets the value of the 'TotalSellNo' field.
   * @param value the value to set.
   */
  public void setTotalSellNo(Integer value) {
    this.TotalSellNo = value;
  }

  /**
   * Gets the value of the 'MaxBuyDuration' field.
   * @return The value of the 'MaxBuyDuration' field.
   */
  public Integer getMaxBuyDuration() {
    return MaxBuyDuration;
  }

  /**
   * Sets the value of the 'MaxBuyDuration' field.
   * @param value the value to set.
   */
  public void setMaxBuyDuration(Integer value) {
    this.MaxBuyDuration = value;
  }

  /**
   * Gets the value of the 'MaxSellDuration' field.
   * @return The value of the 'MaxSellDuration' field.
   */
  public Integer getMaxSellDuration() {
    return MaxSellDuration;
  }

  /**
   * Sets the value of the 'MaxSellDuration' field.
   * @param value the value to set.
   */
  public void setMaxSellDuration(Integer value) {
    this.MaxSellDuration = value;
  }

  /**
   * Gets the value of the 'BuyOrderNo' field.
   * @return The value of the 'BuyOrderNo' field.
   */
  public Integer getBuyOrderNo() {
    return BuyOrderNo;
  }

  /**
   * Sets the value of the 'BuyOrderNo' field.
   * @param value the value to set.
   */
  public void setBuyOrderNo(Integer value) {
    this.BuyOrderNo = value;
  }

  /**
   * Gets the value of the 'SellOrderNo' field.
   * @return The value of the 'SellOrderNo' field.
   */
  public Integer getSellOrderNo() {
    return SellOrderNo;
  }

  /**
   * Sets the value of the 'SellOrderNo' field.
   * @param value the value to set.
   */
  public void setSellOrderNo(Integer value) {
    this.SellOrderNo = value;
  }

  /**
   * Gets the value of the 'SellLevelNo' field.
   * @return The value of the 'SellLevelNo' field.
   */
  public Integer getSellLevelNo() {
    return SellLevelNo;
  }

  /**
   * Sets the value of the 'SellLevelNo' field.
   * @param value the value to set.
   */
  public void setSellLevelNo(Integer value) {
    this.SellLevelNo = value;
  }

  /**
   * Gets the value of the 'SellLevel_price' field.
   * @return The value of the 'SellLevel_price' field.
   */
  public java.util.List<Double> getSellLevelPrice() {
    return SellLevel_price;
  }

  /**
   * Sets the value of the 'SellLevel_price' field.
   * @param value the value to set.
   */
  public void setSellLevelPrice(java.util.List<Double> value) {
    this.SellLevel_price = value;
  }

  /**
   * Gets the value of the 'SellLevel_TotalOrderNo' field.
   * @return The value of the 'SellLevel_TotalOrderNo' field.
   */
  public java.util.List<Long> getSellLevelTotalOrderNo() {
    return SellLevel_TotalOrderNo;
  }

  /**
   * Sets the value of the 'SellLevel_TotalOrderNo' field.
   * @param value the value to set.
   */
  public void setSellLevelTotalOrderNo(java.util.List<Long> value) {
    this.SellLevel_TotalOrderNo = value;
  }

  /**
   * Gets the value of the 'SellLevel_Volume' field.
   * @return The value of the 'SellLevel_Volume' field.
   */
  public java.util.List<Double> getSellLevelVolume() {
    return SellLevel_Volume;
  }

  /**
   * Sets the value of the 'SellLevel_Volume' field.
   * @param value the value to set.
   */
  public void setSellLevelVolume(java.util.List<Double> value) {
    this.SellLevel_Volume = value;
  }

  /**
   * Gets the value of the 'SellLevelQueueNo01' field.
   * @return The value of the 'SellLevelQueueNo01' field.
   */
  public Integer getSellLevelQueueNo01() {
    return SellLevelQueueNo01;
  }

  /**
   * Sets the value of the 'SellLevelQueueNo01' field.
   * @param value the value to set.
   */
  public void setSellLevelQueueNo01(Integer value) {
    this.SellLevelQueueNo01 = value;
  }

  /**
   * Gets the value of the 'SellLevelQueue' field.
   * @return The value of the 'SellLevelQueue' field.
   */
  public java.util.List<Double> getSellLevelQueue() {
    return SellLevelQueue;
  }

  /**
   * Sets the value of the 'SellLevelQueue' field.
   * @param value the value to set.
   */
  public void setSellLevelQueue(java.util.List<Double> value) {
    this.SellLevelQueue = value;
  }

  /**
   * Gets the value of the 'BuyLevelNo' field.
   * @return The value of the 'BuyLevelNo' field.
   */
  public Integer getBuyLevelNo() {
    return BuyLevelNo;
  }

  /**
   * Sets the value of the 'BuyLevelNo' field.
   * @param value the value to set.
   */
  public void setBuyLevelNo(Integer value) {
    this.BuyLevelNo = value;
  }

  /**
   * Gets the value of the 'BuyLevel_price' field.
   * @return The value of the 'BuyLevel_price' field.
   */
  public java.util.List<Double> getBuyLevelPrice() {
    return BuyLevel_price;
  }

  /**
   * Sets the value of the 'BuyLevel_price' field.
   * @param value the value to set.
   */
  public void setBuyLevelPrice(java.util.List<Double> value) {
    this.BuyLevel_price = value;
  }

  /**
   * Gets the value of the 'BuyLevel_TotalOrderNo' field.
   * @return The value of the 'BuyLevel_TotalOrderNo' field.
   */
  public java.util.List<Long> getBuyLevelTotalOrderNo() {
    return BuyLevel_TotalOrderNo;
  }

  /**
   * Sets the value of the 'BuyLevel_TotalOrderNo' field.
   * @param value the value to set.
   */
  public void setBuyLevelTotalOrderNo(java.util.List<Long> value) {
    this.BuyLevel_TotalOrderNo = value;
  }

  /**
   * Gets the value of the 'BuyLevel_Volume' field.
   * @return The value of the 'BuyLevel_Volume' field.
   */
  public java.util.List<Double> getBuyLevelVolume() {
    return BuyLevel_Volume;
  }

  /**
   * Sets the value of the 'BuyLevel_Volume' field.
   * @param value the value to set.
   */
  public void setBuyLevelVolume(java.util.List<Double> value) {
    this.BuyLevel_Volume = value;
  }

  /**
   * Gets the value of the 'BuyLevelQueueNo01' field.
   * @return The value of the 'BuyLevelQueueNo01' field.
   */
  public Integer getBuyLevelQueueNo01() {
    return BuyLevelQueueNo01;
  }

  /**
   * Sets the value of the 'BuyLevelQueueNo01' field.
   * @param value the value to set.
   */
  public void setBuyLevelQueueNo01(Integer value) {
    this.BuyLevelQueueNo01 = value;
  }

  /**
   * Gets the value of the 'BuyLevelQueue' field.
   * @return The value of the 'BuyLevelQueue' field.
   */
  public java.util.List<Double> getBuyLevelQueue() {
    return BuyLevelQueue;
  }

  /**
   * Sets the value of the 'BuyLevelQueue' field.
   * @param value the value to set.
   */
  public void setBuyLevelQueue(java.util.List<Double> value) {
    this.BuyLevelQueue = value;
  }

  /**
   * Gets the value of the 'SymbolSource_SZ' field.
   * @return The value of the 'SymbolSource_SZ' field.
   */
  public CharSequence getSymbolSourceSZ() {
    return SymbolSource_SZ;
  }

  /**
   * Sets the value of the 'SymbolSource_SZ' field.
   * @param value the value to set.
   */
  public void setSymbolSourceSZ(CharSequence value) {
    this.SymbolSource_SZ = value;
  }

  /**
   * Gets the value of the 'PriceUpLimit_SZ' field.
   * @return The value of the 'PriceUpLimit_SZ' field.
   */
  public Double getPriceUpLimitSZ() {
    return PriceUpLimit_SZ;
  }

  /**
   * Sets the value of the 'PriceUpLimit_SZ' field.
   * @param value the value to set.
   */
  public void setPriceUpLimitSZ(Double value) {
    this.PriceUpLimit_SZ = value;
  }

  /**
   * Gets the value of the 'PriceDownLimit_SZ' field.
   * @return The value of the 'PriceDownLimit_SZ' field.
   */
  public Double getPriceDownLimitSZ() {
    return PriceDownLimit_SZ;
  }

  /**
   * Sets the value of the 'PriceDownLimit_SZ' field.
   * @param value the value to set.
   */
  public void setPriceDownLimitSZ(Double value) {
    this.PriceDownLimit_SZ = value;
  }

  /**
   * Gets the value of the 'PriceUpdown1_SZ' field.
   * @return The value of the 'PriceUpdown1_SZ' field.
   */
  public Double getPriceUpdown1SZ() {
    return PriceUpdown1_SZ;
  }

  /**
   * Sets the value of the 'PriceUpdown1_SZ' field.
   * @param value the value to set.
   */
  public void setPriceUpdown1SZ(Double value) {
    this.PriceUpdown1_SZ = value;
  }

  /**
   * Gets the value of the 'PriceUpdown2_SZ' field.
   * @return The value of the 'PriceUpdown2_SZ' field.
   */
  public Double getPriceUpdown2SZ() {
    return PriceUpdown2_SZ;
  }

  /**
   * Sets the value of the 'PriceUpdown2_SZ' field.
   * @param value the value to set.
   */
  public void setPriceUpdown2SZ(Double value) {
    this.PriceUpdown2_SZ = value;
  }

  /**
   * Gets the value of the 'PERatio1_SZ' field.
   * @return The value of the 'PERatio1_SZ' field.
   */
  public Double getPERatio1SZ() {
    return PERatio1_SZ;
  }

  /**
   * Sets the value of the 'PERatio1_SZ' field.
   * @param value the value to set.
   */
  public void setPERatio1SZ(Double value) {
    this.PERatio1_SZ = value;
  }

  /**
   * Gets the value of the 'NAV_SZ' field.
   * @return The value of the 'NAV_SZ' field.
   */
  public Double getNAVSZ() {
    return NAV_SZ;
  }

  /**
   * Sets the value of the 'NAV_SZ' field.
   * @param value the value to set.
   */
  public void setNAVSZ(Double value) {
    this.NAV_SZ = value;
  }

  /**
   * Gets the value of the 'PERatio2_SZ' field.
   * @return The value of the 'PERatio2_SZ' field.
   */
  public Double getPERatio2SZ() {
    return PERatio2_SZ;
  }

  /**
   * Sets the value of the 'PERatio2_SZ' field.
   * @param value the value to set.
   */
  public void setPERatio2SZ(Double value) {
    this.PERatio2_SZ = value;
  }

  /**
   * Gets the value of the 'PRemiumRate_SZ' field.
   * @return The value of the 'PRemiumRate_SZ' field.
   */
  public Double getPRemiumRateSZ() {
    return PRemiumRate_SZ;
  }

  /**
   * Sets the value of the 'PRemiumRate_SZ' field.
   * @param value the value to set.
   */
  public void setPRemiumRateSZ(Double value) {
    this.PRemiumRate_SZ = value;
  }

  /**
   * Gets the value of the 'WtAvgRate_SZ' field.
   * @return The value of the 'WtAvgRate_SZ' field.
   */
  public Double getWtAvgRateSZ() {
    return WtAvgRate_SZ;
  }

  /**
   * Sets the value of the 'WtAvgRate_SZ' field.
   * @param value the value to set.
   */
  public void setWtAvgRateSZ(Double value) {
    this.WtAvgRate_SZ = value;
  }

  /**
   * Gets the value of the 'WtAvgRateUpdown_SZ' field.
   * @return The value of the 'WtAvgRateUpdown_SZ' field.
   */
  public Double getWtAvgRateUpdownSZ() {
    return WtAvgRateUpdown_SZ;
  }

  /**
   * Sets the value of the 'WtAvgRateUpdown_SZ' field.
   * @param value the value to set.
   */
  public void setWtAvgRateUpdownSZ(Double value) {
    this.WtAvgRateUpdown_SZ = value;
  }

  /**
   * Gets the value of the 'PreWtAvgRate_SZ' field.
   * @return The value of the 'PreWtAvgRate_SZ' field.
   */
  public Double getPreWtAvgRateSZ() {
    return PreWtAvgRate_SZ;
  }

  /**
   * Sets the value of the 'PreWtAvgRate_SZ' field.
   * @param value the value to set.
   */
  public void setPreWtAvgRateSZ(Double value) {
    this.PreWtAvgRate_SZ = value;
  }

  /**
   * Creates a new HangQing RecordBuilder.
   * @return A new HangQing RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new HangQing RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HangQing RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new HangQing RecordBuilder by copying an existing HangQing instance.
   * @param other The existing instance to copy.
   * @return A new HangQing RecordBuilder
   */
  public static Builder newBuilder(HangQing other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for HangQing instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HangQing>
    implements org.apache.avro.data.RecordBuilder<HangQing> {

    private int LocalTimeStamp;
    private CharSequence QuotationFlag;
    private Long PacketTimeStampSH;
    private Long Time;
    private CharSequence Symbol;
    private Double PreClosePrice;
    private Double OpenPrice;
    private Double HighPrice;
    private Double LowPrice;
    private Double LastPrice;
    private Double ClosePrice;
    private CharSequence TradeStatus;
    private CharSequence SecurityPhaseTag;
    private Long TotalNo;
    private Double TotalVolume;
    private Double TotalAmount;
    private Double TotalBuyOrderVolume;
    private Double WtAvgBuyPrice;
    private Double BondWtAvgBuyPrice;
    private Double TotalSellOrderVolume;
    private Double WtAvgSellPrice;
    private Double BongWtAvgSellPrice;
    private Double IOPV;
    private Integer ETFBuyNo;
    private Long ETFBuyVolume;
    private Double ETFBuyAmount;
    private Integer ETFSellNo;
    private Long ETFSellVolume;
    private Double ETFSellAmount;
    private Double YTM;
    private Long TotalWarrantExecVol;
    private Double WarrantDownLimit;
    private Double WarrantUpLimit;
    private Integer WithdrawBuyNo;
    private Long WithdrawBuyVolume;
    private Double WithdrawBuyAmount;
    private Integer WithdrawSellNo;
    private Long WithdrawSellVolume;
    private Double WithdrawSellAmount;
    private Integer TotalBuyNo;
    private Integer TotalSellNo;
    private Integer MaxBuyDuration;
    private Integer MaxSellDuration;
    private Integer BuyOrderNo;
    private Integer SellOrderNo;
    private Integer SellLevelNo;
    private java.util.List<Double> SellLevel_price;
    private java.util.List<Long> SellLevel_TotalOrderNo;
    private java.util.List<Double> SellLevel_Volume;
    private Integer SellLevelQueueNo01;
    private java.util.List<Double> SellLevelQueue;
    private Integer BuyLevelNo;
    private java.util.List<Double> BuyLevel_price;
    private java.util.List<Long> BuyLevel_TotalOrderNo;
    private java.util.List<Double> BuyLevel_Volume;
    private Integer BuyLevelQueueNo01;
    private java.util.List<Double> BuyLevelQueue;
    private CharSequence SymbolSource_SZ;
    private Double PriceUpLimit_SZ;
    private Double PriceDownLimit_SZ;
    private Double PriceUpdown1_SZ;
    private Double PriceUpdown2_SZ;
    private Double PERatio1_SZ;
    private Double NAV_SZ;
    private Double PERatio2_SZ;
    private Double PRemiumRate_SZ;
    private Double WtAvgRate_SZ;
    private Double WtAvgRateUpdown_SZ;
    private Double PreWtAvgRate_SZ;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.LocalTimeStamp)) {
        this.LocalTimeStamp = data().deepCopy(fields()[0].schema(), other.LocalTimeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.QuotationFlag)) {
        this.QuotationFlag = data().deepCopy(fields()[1].schema(), other.QuotationFlag);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PacketTimeStampSH)) {
        this.PacketTimeStampSH = data().deepCopy(fields()[2].schema(), other.PacketTimeStampSH);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Symbol)) {
        this.Symbol = data().deepCopy(fields()[4].schema(), other.Symbol);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PreClosePrice)) {
        this.PreClosePrice = data().deepCopy(fields()[5].schema(), other.PreClosePrice);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OpenPrice)) {
        this.OpenPrice = data().deepCopy(fields()[6].schema(), other.OpenPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.HighPrice)) {
        this.HighPrice = data().deepCopy(fields()[7].schema(), other.HighPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LowPrice)) {
        this.LowPrice = data().deepCopy(fields()[8].schema(), other.LowPrice);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LastPrice)) {
        this.LastPrice = data().deepCopy(fields()[9].schema(), other.LastPrice);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ClosePrice)) {
        this.ClosePrice = data().deepCopy(fields()[10].schema(), other.ClosePrice);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TradeStatus)) {
        this.TradeStatus = data().deepCopy(fields()[11].schema(), other.TradeStatus);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SecurityPhaseTag)) {
        this.SecurityPhaseTag = data().deepCopy(fields()[12].schema(), other.SecurityPhaseTag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TotalNo)) {
        this.TotalNo = data().deepCopy(fields()[13].schema(), other.TotalNo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.TotalVolume)) {
        this.TotalVolume = data().deepCopy(fields()[14].schema(), other.TotalVolume);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[15].schema(), other.TotalAmount);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TotalBuyOrderVolume)) {
        this.TotalBuyOrderVolume = data().deepCopy(fields()[16].schema(), other.TotalBuyOrderVolume);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.WtAvgBuyPrice)) {
        this.WtAvgBuyPrice = data().deepCopy(fields()[17].schema(), other.WtAvgBuyPrice);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.BondWtAvgBuyPrice)) {
        this.BondWtAvgBuyPrice = data().deepCopy(fields()[18].schema(), other.BondWtAvgBuyPrice);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.TotalSellOrderVolume)) {
        this.TotalSellOrderVolume = data().deepCopy(fields()[19].schema(), other.TotalSellOrderVolume);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.WtAvgSellPrice)) {
        this.WtAvgSellPrice = data().deepCopy(fields()[20].schema(), other.WtAvgSellPrice);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.BongWtAvgSellPrice)) {
        this.BongWtAvgSellPrice = data().deepCopy(fields()[21].schema(), other.BongWtAvgSellPrice);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.IOPV)) {
        this.IOPV = data().deepCopy(fields()[22].schema(), other.IOPV);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ETFBuyNo)) {
        this.ETFBuyNo = data().deepCopy(fields()[23].schema(), other.ETFBuyNo);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.ETFBuyVolume)) {
        this.ETFBuyVolume = data().deepCopy(fields()[24].schema(), other.ETFBuyVolume);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.ETFBuyAmount)) {
        this.ETFBuyAmount = data().deepCopy(fields()[25].schema(), other.ETFBuyAmount);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.ETFSellNo)) {
        this.ETFSellNo = data().deepCopy(fields()[26].schema(), other.ETFSellNo);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.ETFSellVolume)) {
        this.ETFSellVolume = data().deepCopy(fields()[27].schema(), other.ETFSellVolume);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.ETFSellAmount)) {
        this.ETFSellAmount = data().deepCopy(fields()[28].schema(), other.ETFSellAmount);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.YTM)) {
        this.YTM = data().deepCopy(fields()[29].schema(), other.YTM);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.TotalWarrantExecVol)) {
        this.TotalWarrantExecVol = data().deepCopy(fields()[30].schema(), other.TotalWarrantExecVol);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.WarrantDownLimit)) {
        this.WarrantDownLimit = data().deepCopy(fields()[31].schema(), other.WarrantDownLimit);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.WarrantUpLimit)) {
        this.WarrantUpLimit = data().deepCopy(fields()[32].schema(), other.WarrantUpLimit);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.WithdrawBuyNo)) {
        this.WithdrawBuyNo = data().deepCopy(fields()[33].schema(), other.WithdrawBuyNo);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.WithdrawBuyVolume)) {
        this.WithdrawBuyVolume = data().deepCopy(fields()[34].schema(), other.WithdrawBuyVolume);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.WithdrawBuyAmount)) {
        this.WithdrawBuyAmount = data().deepCopy(fields()[35].schema(), other.WithdrawBuyAmount);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.WithdrawSellNo)) {
        this.WithdrawSellNo = data().deepCopy(fields()[36].schema(), other.WithdrawSellNo);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.WithdrawSellVolume)) {
        this.WithdrawSellVolume = data().deepCopy(fields()[37].schema(), other.WithdrawSellVolume);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.WithdrawSellAmount)) {
        this.WithdrawSellAmount = data().deepCopy(fields()[38].schema(), other.WithdrawSellAmount);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.TotalBuyNo)) {
        this.TotalBuyNo = data().deepCopy(fields()[39].schema(), other.TotalBuyNo);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.TotalSellNo)) {
        this.TotalSellNo = data().deepCopy(fields()[40].schema(), other.TotalSellNo);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.MaxBuyDuration)) {
        this.MaxBuyDuration = data().deepCopy(fields()[41].schema(), other.MaxBuyDuration);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.MaxSellDuration)) {
        this.MaxSellDuration = data().deepCopy(fields()[42].schema(), other.MaxSellDuration);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.BuyOrderNo)) {
        this.BuyOrderNo = data().deepCopy(fields()[43].schema(), other.BuyOrderNo);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SellOrderNo)) {
        this.SellOrderNo = data().deepCopy(fields()[44].schema(), other.SellOrderNo);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SellLevelNo)) {
        this.SellLevelNo = data().deepCopy(fields()[45].schema(), other.SellLevelNo);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.SellLevel_price)) {
        this.SellLevel_price = data().deepCopy(fields()[46].schema(), other.SellLevel_price);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SellLevel_TotalOrderNo)) {
        this.SellLevel_TotalOrderNo = data().deepCopy(fields()[47].schema(), other.SellLevel_TotalOrderNo);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SellLevel_Volume)) {
        this.SellLevel_Volume = data().deepCopy(fields()[48].schema(), other.SellLevel_Volume);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SellLevelQueueNo01)) {
        this.SellLevelQueueNo01 = data().deepCopy(fields()[49].schema(), other.SellLevelQueueNo01);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.SellLevelQueue)) {
        this.SellLevelQueue = data().deepCopy(fields()[50].schema(), other.SellLevelQueue);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.BuyLevelNo)) {
        this.BuyLevelNo = data().deepCopy(fields()[51].schema(), other.BuyLevelNo);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.BuyLevel_price)) {
        this.BuyLevel_price = data().deepCopy(fields()[52].schema(), other.BuyLevel_price);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.BuyLevel_TotalOrderNo)) {
        this.BuyLevel_TotalOrderNo = data().deepCopy(fields()[53].schema(), other.BuyLevel_TotalOrderNo);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.BuyLevel_Volume)) {
        this.BuyLevel_Volume = data().deepCopy(fields()[54].schema(), other.BuyLevel_Volume);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.BuyLevelQueueNo01)) {
        this.BuyLevelQueueNo01 = data().deepCopy(fields()[55].schema(), other.BuyLevelQueueNo01);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.BuyLevelQueue)) {
        this.BuyLevelQueue = data().deepCopy(fields()[56].schema(), other.BuyLevelQueue);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.SymbolSource_SZ)) {
        this.SymbolSource_SZ = data().deepCopy(fields()[57].schema(), other.SymbolSource_SZ);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.PriceUpLimit_SZ)) {
        this.PriceUpLimit_SZ = data().deepCopy(fields()[58].schema(), other.PriceUpLimit_SZ);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.PriceDownLimit_SZ)) {
        this.PriceDownLimit_SZ = data().deepCopy(fields()[59].schema(), other.PriceDownLimit_SZ);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.PriceUpdown1_SZ)) {
        this.PriceUpdown1_SZ = data().deepCopy(fields()[60].schema(), other.PriceUpdown1_SZ);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.PriceUpdown2_SZ)) {
        this.PriceUpdown2_SZ = data().deepCopy(fields()[61].schema(), other.PriceUpdown2_SZ);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.PERatio1_SZ)) {
        this.PERatio1_SZ = data().deepCopy(fields()[62].schema(), other.PERatio1_SZ);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.NAV_SZ)) {
        this.NAV_SZ = data().deepCopy(fields()[63].schema(), other.NAV_SZ);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.PERatio2_SZ)) {
        this.PERatio2_SZ = data().deepCopy(fields()[64].schema(), other.PERatio2_SZ);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.PRemiumRate_SZ)) {
        this.PRemiumRate_SZ = data().deepCopy(fields()[65].schema(), other.PRemiumRate_SZ);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.WtAvgRate_SZ)) {
        this.WtAvgRate_SZ = data().deepCopy(fields()[66].schema(), other.WtAvgRate_SZ);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.WtAvgRateUpdown_SZ)) {
        this.WtAvgRateUpdown_SZ = data().deepCopy(fields()[67].schema(), other.WtAvgRateUpdown_SZ);
        fieldSetFlags()[67] = true;
      }
      if (isValidValue(fields()[68], other.PreWtAvgRate_SZ)) {
        this.PreWtAvgRate_SZ = data().deepCopy(fields()[68].schema(), other.PreWtAvgRate_SZ);
        fieldSetFlags()[68] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing HangQing instance
     * @param other The existing instance to copy.
     */
    private Builder(HangQing other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.LocalTimeStamp)) {
        this.LocalTimeStamp = data().deepCopy(fields()[0].schema(), other.LocalTimeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.QuotationFlag)) {
        this.QuotationFlag = data().deepCopy(fields()[1].schema(), other.QuotationFlag);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PacketTimeStampSH)) {
        this.PacketTimeStampSH = data().deepCopy(fields()[2].schema(), other.PacketTimeStampSH);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Symbol)) {
        this.Symbol = data().deepCopy(fields()[4].schema(), other.Symbol);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PreClosePrice)) {
        this.PreClosePrice = data().deepCopy(fields()[5].schema(), other.PreClosePrice);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OpenPrice)) {
        this.OpenPrice = data().deepCopy(fields()[6].schema(), other.OpenPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.HighPrice)) {
        this.HighPrice = data().deepCopy(fields()[7].schema(), other.HighPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LowPrice)) {
        this.LowPrice = data().deepCopy(fields()[8].schema(), other.LowPrice);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LastPrice)) {
        this.LastPrice = data().deepCopy(fields()[9].schema(), other.LastPrice);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ClosePrice)) {
        this.ClosePrice = data().deepCopy(fields()[10].schema(), other.ClosePrice);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TradeStatus)) {
        this.TradeStatus = data().deepCopy(fields()[11].schema(), other.TradeStatus);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SecurityPhaseTag)) {
        this.SecurityPhaseTag = data().deepCopy(fields()[12].schema(), other.SecurityPhaseTag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TotalNo)) {
        this.TotalNo = data().deepCopy(fields()[13].schema(), other.TotalNo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.TotalVolume)) {
        this.TotalVolume = data().deepCopy(fields()[14].schema(), other.TotalVolume);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[15].schema(), other.TotalAmount);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TotalBuyOrderVolume)) {
        this.TotalBuyOrderVolume = data().deepCopy(fields()[16].schema(), other.TotalBuyOrderVolume);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.WtAvgBuyPrice)) {
        this.WtAvgBuyPrice = data().deepCopy(fields()[17].schema(), other.WtAvgBuyPrice);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.BondWtAvgBuyPrice)) {
        this.BondWtAvgBuyPrice = data().deepCopy(fields()[18].schema(), other.BondWtAvgBuyPrice);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.TotalSellOrderVolume)) {
        this.TotalSellOrderVolume = data().deepCopy(fields()[19].schema(), other.TotalSellOrderVolume);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.WtAvgSellPrice)) {
        this.WtAvgSellPrice = data().deepCopy(fields()[20].schema(), other.WtAvgSellPrice);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.BongWtAvgSellPrice)) {
        this.BongWtAvgSellPrice = data().deepCopy(fields()[21].schema(), other.BongWtAvgSellPrice);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.IOPV)) {
        this.IOPV = data().deepCopy(fields()[22].schema(), other.IOPV);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ETFBuyNo)) {
        this.ETFBuyNo = data().deepCopy(fields()[23].schema(), other.ETFBuyNo);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.ETFBuyVolume)) {
        this.ETFBuyVolume = data().deepCopy(fields()[24].schema(), other.ETFBuyVolume);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.ETFBuyAmount)) {
        this.ETFBuyAmount = data().deepCopy(fields()[25].schema(), other.ETFBuyAmount);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.ETFSellNo)) {
        this.ETFSellNo = data().deepCopy(fields()[26].schema(), other.ETFSellNo);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.ETFSellVolume)) {
        this.ETFSellVolume = data().deepCopy(fields()[27].schema(), other.ETFSellVolume);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.ETFSellAmount)) {
        this.ETFSellAmount = data().deepCopy(fields()[28].schema(), other.ETFSellAmount);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.YTM)) {
        this.YTM = data().deepCopy(fields()[29].schema(), other.YTM);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.TotalWarrantExecVol)) {
        this.TotalWarrantExecVol = data().deepCopy(fields()[30].schema(), other.TotalWarrantExecVol);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.WarrantDownLimit)) {
        this.WarrantDownLimit = data().deepCopy(fields()[31].schema(), other.WarrantDownLimit);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.WarrantUpLimit)) {
        this.WarrantUpLimit = data().deepCopy(fields()[32].schema(), other.WarrantUpLimit);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.WithdrawBuyNo)) {
        this.WithdrawBuyNo = data().deepCopy(fields()[33].schema(), other.WithdrawBuyNo);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.WithdrawBuyVolume)) {
        this.WithdrawBuyVolume = data().deepCopy(fields()[34].schema(), other.WithdrawBuyVolume);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.WithdrawBuyAmount)) {
        this.WithdrawBuyAmount = data().deepCopy(fields()[35].schema(), other.WithdrawBuyAmount);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.WithdrawSellNo)) {
        this.WithdrawSellNo = data().deepCopy(fields()[36].schema(), other.WithdrawSellNo);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.WithdrawSellVolume)) {
        this.WithdrawSellVolume = data().deepCopy(fields()[37].schema(), other.WithdrawSellVolume);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.WithdrawSellAmount)) {
        this.WithdrawSellAmount = data().deepCopy(fields()[38].schema(), other.WithdrawSellAmount);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.TotalBuyNo)) {
        this.TotalBuyNo = data().deepCopy(fields()[39].schema(), other.TotalBuyNo);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.TotalSellNo)) {
        this.TotalSellNo = data().deepCopy(fields()[40].schema(), other.TotalSellNo);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.MaxBuyDuration)) {
        this.MaxBuyDuration = data().deepCopy(fields()[41].schema(), other.MaxBuyDuration);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.MaxSellDuration)) {
        this.MaxSellDuration = data().deepCopy(fields()[42].schema(), other.MaxSellDuration);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.BuyOrderNo)) {
        this.BuyOrderNo = data().deepCopy(fields()[43].schema(), other.BuyOrderNo);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SellOrderNo)) {
        this.SellOrderNo = data().deepCopy(fields()[44].schema(), other.SellOrderNo);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SellLevelNo)) {
        this.SellLevelNo = data().deepCopy(fields()[45].schema(), other.SellLevelNo);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.SellLevel_price)) {
        this.SellLevel_price = data().deepCopy(fields()[46].schema(), other.SellLevel_price);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SellLevel_TotalOrderNo)) {
        this.SellLevel_TotalOrderNo = data().deepCopy(fields()[47].schema(), other.SellLevel_TotalOrderNo);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SellLevel_Volume)) {
        this.SellLevel_Volume = data().deepCopy(fields()[48].schema(), other.SellLevel_Volume);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SellLevelQueueNo01)) {
        this.SellLevelQueueNo01 = data().deepCopy(fields()[49].schema(), other.SellLevelQueueNo01);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.SellLevelQueue)) {
        this.SellLevelQueue = data().deepCopy(fields()[50].schema(), other.SellLevelQueue);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.BuyLevelNo)) {
        this.BuyLevelNo = data().deepCopy(fields()[51].schema(), other.BuyLevelNo);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.BuyLevel_price)) {
        this.BuyLevel_price = data().deepCopy(fields()[52].schema(), other.BuyLevel_price);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.BuyLevel_TotalOrderNo)) {
        this.BuyLevel_TotalOrderNo = data().deepCopy(fields()[53].schema(), other.BuyLevel_TotalOrderNo);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.BuyLevel_Volume)) {
        this.BuyLevel_Volume = data().deepCopy(fields()[54].schema(), other.BuyLevel_Volume);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.BuyLevelQueueNo01)) {
        this.BuyLevelQueueNo01 = data().deepCopy(fields()[55].schema(), other.BuyLevelQueueNo01);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.BuyLevelQueue)) {
        this.BuyLevelQueue = data().deepCopy(fields()[56].schema(), other.BuyLevelQueue);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.SymbolSource_SZ)) {
        this.SymbolSource_SZ = data().deepCopy(fields()[57].schema(), other.SymbolSource_SZ);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.PriceUpLimit_SZ)) {
        this.PriceUpLimit_SZ = data().deepCopy(fields()[58].schema(), other.PriceUpLimit_SZ);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.PriceDownLimit_SZ)) {
        this.PriceDownLimit_SZ = data().deepCopy(fields()[59].schema(), other.PriceDownLimit_SZ);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.PriceUpdown1_SZ)) {
        this.PriceUpdown1_SZ = data().deepCopy(fields()[60].schema(), other.PriceUpdown1_SZ);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.PriceUpdown2_SZ)) {
        this.PriceUpdown2_SZ = data().deepCopy(fields()[61].schema(), other.PriceUpdown2_SZ);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.PERatio1_SZ)) {
        this.PERatio1_SZ = data().deepCopy(fields()[62].schema(), other.PERatio1_SZ);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.NAV_SZ)) {
        this.NAV_SZ = data().deepCopy(fields()[63].schema(), other.NAV_SZ);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.PERatio2_SZ)) {
        this.PERatio2_SZ = data().deepCopy(fields()[64].schema(), other.PERatio2_SZ);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.PRemiumRate_SZ)) {
        this.PRemiumRate_SZ = data().deepCopy(fields()[65].schema(), other.PRemiumRate_SZ);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.WtAvgRate_SZ)) {
        this.WtAvgRate_SZ = data().deepCopy(fields()[66].schema(), other.WtAvgRate_SZ);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.WtAvgRateUpdown_SZ)) {
        this.WtAvgRateUpdown_SZ = data().deepCopy(fields()[67].schema(), other.WtAvgRateUpdown_SZ);
        fieldSetFlags()[67] = true;
      }
      if (isValidValue(fields()[68], other.PreWtAvgRate_SZ)) {
        this.PreWtAvgRate_SZ = data().deepCopy(fields()[68].schema(), other.PreWtAvgRate_SZ);
        fieldSetFlags()[68] = true;
      }
    }

    /**
      * Gets the value of the 'LocalTimeStamp' field.
      * @return The value.
      */
    public Integer getLocalTimeStamp() {
      return LocalTimeStamp;
    }

    /**
      * Sets the value of the 'LocalTimeStamp' field.
      * @param value The value of 'LocalTimeStamp'.
      * @return This builder.
      */
    public Builder setLocalTimeStamp(int value) {
      validate(fields()[0], value);
      this.LocalTimeStamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'LocalTimeStamp' field has been set.
      * @return True if the 'LocalTimeStamp' field has been set, false otherwise.
      */
    public boolean hasLocalTimeStamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'LocalTimeStamp' field.
      * @return This builder.
      */
    public Builder clearLocalTimeStamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'QuotationFlag' field.
      * @return The value.
      */
    public CharSequence getQuotationFlag() {
      return QuotationFlag;
    }

    /**
      * Sets the value of the 'QuotationFlag' field.
      * @param value The value of 'QuotationFlag'.
      * @return This builder.
      */
    public Builder setQuotationFlag(CharSequence value) {
      validate(fields()[1], value);
      this.QuotationFlag = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'QuotationFlag' field has been set.
      * @return True if the 'QuotationFlag' field has been set, false otherwise.
      */
    public boolean hasQuotationFlag() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'QuotationFlag' field.
      * @return This builder.
      */
    public Builder clearQuotationFlag() {
      QuotationFlag = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'PacketTimeStampSH' field.
      * @return The value.
      */
    public Long getPacketTimeStampSH() {
      return PacketTimeStampSH;
    }

    /**
      * Sets the value of the 'PacketTimeStampSH' field.
      * @param value The value of 'PacketTimeStampSH'.
      * @return This builder.
      */
    public Builder setPacketTimeStampSH(Long value) {
      validate(fields()[2], value);
      this.PacketTimeStampSH = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'PacketTimeStampSH' field has been set.
      * @return True if the 'PacketTimeStampSH' field has been set, false otherwise.
      */
    public boolean hasPacketTimeStampSH() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'PacketTimeStampSH' field.
      * @return This builder.
      */
    public Builder clearPacketTimeStampSH() {
      PacketTimeStampSH = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Time' field.
      * @return The value.
      */
    public Long getTime() {
      return Time;
    }

    /**
      * Sets the value of the 'Time' field.
      * @param value The value of 'Time'.
      * @return This builder.
      */
    public Builder setTime(Long value) {
      validate(fields()[3], value);
      this.Time = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Time' field has been set.
      * @return True if the 'Time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Time' field.
      * @return This builder.
      */
    public Builder clearTime() {
      Time = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Symbol' field.
      * @return The value.
      */
    public CharSequence getSymbol() {
      return Symbol;
    }

    /**
      * Sets the value of the 'Symbol' field.
      * @param value The value of 'Symbol'.
      * @return This builder.
      */
    public Builder setSymbol(CharSequence value) {
      validate(fields()[4], value);
      this.Symbol = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Symbol' field has been set.
      * @return True if the 'Symbol' field has been set, false otherwise.
      */
    public boolean hasSymbol() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Symbol' field.
      * @return This builder.
      */
    public Builder clearSymbol() {
      Symbol = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreClosePrice' field.
      * @return The value.
      */
    public Double getPreClosePrice() {
      return PreClosePrice;
    }

    /**
      * Sets the value of the 'PreClosePrice' field.
      * @param value The value of 'PreClosePrice'.
      * @return This builder.
      */
    public Builder setPreClosePrice(Double value) {
      validate(fields()[5], value);
      this.PreClosePrice = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'PreClosePrice' field has been set.
      * @return True if the 'PreClosePrice' field has been set, false otherwise.
      */
    public boolean hasPreClosePrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'PreClosePrice' field.
      * @return This builder.
      */
    public Builder clearPreClosePrice() {
      PreClosePrice = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'OpenPrice' field.
      * @return The value.
      */
    public Double getOpenPrice() {
      return OpenPrice;
    }

    /**
      * Sets the value of the 'OpenPrice' field.
      * @param value The value of 'OpenPrice'.
      * @return This builder.
      */
    public Builder setOpenPrice(Double value) {
      validate(fields()[6], value);
      this.OpenPrice = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'OpenPrice' field has been set.
      * @return True if the 'OpenPrice' field has been set, false otherwise.
      */
    public boolean hasOpenPrice() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'OpenPrice' field.
      * @return This builder.
      */
    public Builder clearOpenPrice() {
      OpenPrice = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'HighPrice' field.
      * @return The value.
      */
    public Double getHighPrice() {
      return HighPrice;
    }

    /**
      * Sets the value of the 'HighPrice' field.
      * @param value The value of 'HighPrice'.
      * @return This builder.
      */
    public Builder setHighPrice(Double value) {
      validate(fields()[7], value);
      this.HighPrice = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'HighPrice' field has been set.
      * @return True if the 'HighPrice' field has been set, false otherwise.
      */
    public boolean hasHighPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'HighPrice' field.
      * @return This builder.
      */
    public Builder clearHighPrice() {
      HighPrice = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'LowPrice' field.
      * @return The value.
      */
    public Double getLowPrice() {
      return LowPrice;
    }

    /**
      * Sets the value of the 'LowPrice' field.
      * @param value The value of 'LowPrice'.
      * @return This builder.
      */
    public Builder setLowPrice(Double value) {
      validate(fields()[8], value);
      this.LowPrice = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'LowPrice' field has been set.
      * @return True if the 'LowPrice' field has been set, false otherwise.
      */
    public boolean hasLowPrice() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'LowPrice' field.
      * @return This builder.
      */
    public Builder clearLowPrice() {
      LowPrice = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'LastPrice' field.
      * @return The value.
      */
    public Double getLastPrice() {
      return LastPrice;
    }

    /**
      * Sets the value of the 'LastPrice' field.
      * @param value The value of 'LastPrice'.
      * @return This builder.
      */
    public Builder setLastPrice(Double value) {
      validate(fields()[9], value);
      this.LastPrice = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'LastPrice' field has been set.
      * @return True if the 'LastPrice' field has been set, false otherwise.
      */
    public boolean hasLastPrice() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'LastPrice' field.
      * @return This builder.
      */
    public Builder clearLastPrice() {
      LastPrice = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClosePrice' field.
      * @return The value.
      */
    public Double getClosePrice() {
      return ClosePrice;
    }

    /**
      * Sets the value of the 'ClosePrice' field.
      * @param value The value of 'ClosePrice'.
      * @return This builder.
      */
    public Builder setClosePrice(Double value) {
      validate(fields()[10], value);
      this.ClosePrice = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ClosePrice' field has been set.
      * @return True if the 'ClosePrice' field has been set, false otherwise.
      */
    public boolean hasClosePrice() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ClosePrice' field.
      * @return This builder.
      */
    public Builder clearClosePrice() {
      ClosePrice = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeStatus' field.
      * @return The value.
      */
    public CharSequence getTradeStatus() {
      return TradeStatus;
    }

    /**
      * Sets the value of the 'TradeStatus' field.
      * @param value The value of 'TradeStatus'.
      * @return This builder.
      */
    public Builder setTradeStatus(CharSequence value) {
      validate(fields()[11], value);
      this.TradeStatus = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeStatus' field has been set.
      * @return True if the 'TradeStatus' field has been set, false otherwise.
      */
    public boolean hasTradeStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'TradeStatus' field.
      * @return This builder.
      */
    public Builder clearTradeStatus() {
      TradeStatus = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'SecurityPhaseTag' field.
      * @return The value.
      */
    public CharSequence getSecurityPhaseTag() {
      return SecurityPhaseTag;
    }

    /**
      * Sets the value of the 'SecurityPhaseTag' field.
      * @param value The value of 'SecurityPhaseTag'.
      * @return This builder.
      */
    public Builder setSecurityPhaseTag(CharSequence value) {
      validate(fields()[12], value);
      this.SecurityPhaseTag = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'SecurityPhaseTag' field has been set.
      * @return True if the 'SecurityPhaseTag' field has been set, false otherwise.
      */
    public boolean hasSecurityPhaseTag() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'SecurityPhaseTag' field.
      * @return This builder.
      */
    public Builder clearSecurityPhaseTag() {
      SecurityPhaseTag = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalNo' field.
      * @return The value.
      */
    public Long getTotalNo() {
      return TotalNo;
    }

    /**
      * Sets the value of the 'TotalNo' field.
      * @param value The value of 'TotalNo'.
      * @return This builder.
      */
    public Builder setTotalNo(Long value) {
      validate(fields()[13], value);
      this.TotalNo = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalNo' field has been set.
      * @return True if the 'TotalNo' field has been set, false otherwise.
      */
    public boolean hasTotalNo() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'TotalNo' field.
      * @return This builder.
      */
    public Builder clearTotalNo() {
      TotalNo = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalVolume' field.
      * @return The value.
      */
    public Double getTotalVolume() {
      return TotalVolume;
    }

    /**
      * Sets the value of the 'TotalVolume' field.
      * @param value The value of 'TotalVolume'.
      * @return This builder.
      */
    public Builder setTotalVolume(Double value) {
      validate(fields()[14], value);
      this.TotalVolume = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalVolume' field has been set.
      * @return True if the 'TotalVolume' field has been set, false otherwise.
      */
    public boolean hasTotalVolume() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'TotalVolume' field.
      * @return This builder.
      */
    public Builder clearTotalVolume() {
      TotalVolume = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalAmount' field.
      * @return The value.
      */
    public Double getTotalAmount() {
      return TotalAmount;
    }

    /**
      * Sets the value of the 'TotalAmount' field.
      * @param value The value of 'TotalAmount'.
      * @return This builder.
      */
    public Builder setTotalAmount(Double value) {
      validate(fields()[15], value);
      this.TotalAmount = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalAmount' field has been set.
      * @return True if the 'TotalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'TotalAmount' field.
      * @return This builder.
      */
    public Builder clearTotalAmount() {
      TotalAmount = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalBuyOrderVolume' field.
      * @return The value.
      */
    public Double getTotalBuyOrderVolume() {
      return TotalBuyOrderVolume;
    }

    /**
      * Sets the value of the 'TotalBuyOrderVolume' field.
      * @param value The value of 'TotalBuyOrderVolume'.
      * @return This builder.
      */
    public Builder setTotalBuyOrderVolume(Double value) {
      validate(fields()[16], value);
      this.TotalBuyOrderVolume = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalBuyOrderVolume' field has been set.
      * @return True if the 'TotalBuyOrderVolume' field has been set, false otherwise.
      */
    public boolean hasTotalBuyOrderVolume() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'TotalBuyOrderVolume' field.
      * @return This builder.
      */
    public Builder clearTotalBuyOrderVolume() {
      TotalBuyOrderVolume = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'WtAvgBuyPrice' field.
      * @return The value.
      */
    public Double getWtAvgBuyPrice() {
      return WtAvgBuyPrice;
    }

    /**
      * Sets the value of the 'WtAvgBuyPrice' field.
      * @param value The value of 'WtAvgBuyPrice'.
      * @return This builder.
      */
    public Builder setWtAvgBuyPrice(Double value) {
      validate(fields()[17], value);
      this.WtAvgBuyPrice = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'WtAvgBuyPrice' field has been set.
      * @return True if the 'WtAvgBuyPrice' field has been set, false otherwise.
      */
    public boolean hasWtAvgBuyPrice() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'WtAvgBuyPrice' field.
      * @return This builder.
      */
    public Builder clearWtAvgBuyPrice() {
      WtAvgBuyPrice = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'BondWtAvgBuyPrice' field.
      * @return The value.
      */
    public Double getBondWtAvgBuyPrice() {
      return BondWtAvgBuyPrice;
    }

    /**
      * Sets the value of the 'BondWtAvgBuyPrice' field.
      * @param value The value of 'BondWtAvgBuyPrice'.
      * @return This builder.
      */
    public Builder setBondWtAvgBuyPrice(Double value) {
      validate(fields()[18], value);
      this.BondWtAvgBuyPrice = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'BondWtAvgBuyPrice' field has been set.
      * @return True if the 'BondWtAvgBuyPrice' field has been set, false otherwise.
      */
    public boolean hasBondWtAvgBuyPrice() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'BondWtAvgBuyPrice' field.
      * @return This builder.
      */
    public Builder clearBondWtAvgBuyPrice() {
      BondWtAvgBuyPrice = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalSellOrderVolume' field.
      * @return The value.
      */
    public Double getTotalSellOrderVolume() {
      return TotalSellOrderVolume;
    }

    /**
      * Sets the value of the 'TotalSellOrderVolume' field.
      * @param value The value of 'TotalSellOrderVolume'.
      * @return This builder.
      */
    public Builder setTotalSellOrderVolume(Double value) {
      validate(fields()[19], value);
      this.TotalSellOrderVolume = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalSellOrderVolume' field has been set.
      * @return True if the 'TotalSellOrderVolume' field has been set, false otherwise.
      */
    public boolean hasTotalSellOrderVolume() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'TotalSellOrderVolume' field.
      * @return This builder.
      */
    public Builder clearTotalSellOrderVolume() {
      TotalSellOrderVolume = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'WtAvgSellPrice' field.
      * @return The value.
      */
    public Double getWtAvgSellPrice() {
      return WtAvgSellPrice;
    }

    /**
      * Sets the value of the 'WtAvgSellPrice' field.
      * @param value The value of 'WtAvgSellPrice'.
      * @return This builder.
      */
    public Builder setWtAvgSellPrice(Double value) {
      validate(fields()[20], value);
      this.WtAvgSellPrice = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'WtAvgSellPrice' field has been set.
      * @return True if the 'WtAvgSellPrice' field has been set, false otherwise.
      */
    public boolean hasWtAvgSellPrice() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'WtAvgSellPrice' field.
      * @return This builder.
      */
    public Builder clearWtAvgSellPrice() {
      WtAvgSellPrice = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'BongWtAvgSellPrice' field.
      * @return The value.
      */
    public Double getBongWtAvgSellPrice() {
      return BongWtAvgSellPrice;
    }

    /**
      * Sets the value of the 'BongWtAvgSellPrice' field.
      * @param value The value of 'BongWtAvgSellPrice'.
      * @return This builder.
      */
    public Builder setBongWtAvgSellPrice(Double value) {
      validate(fields()[21], value);
      this.BongWtAvgSellPrice = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'BongWtAvgSellPrice' field has been set.
      * @return True if the 'BongWtAvgSellPrice' field has been set, false otherwise.
      */
    public boolean hasBongWtAvgSellPrice() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'BongWtAvgSellPrice' field.
      * @return This builder.
      */
    public Builder clearBongWtAvgSellPrice() {
      BongWtAvgSellPrice = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'IOPV' field.
      * @return The value.
      */
    public Double getIOPV() {
      return IOPV;
    }

    /**
      * Sets the value of the 'IOPV' field.
      * @param value The value of 'IOPV'.
      * @return This builder.
      */
    public Builder setIOPV(Double value) {
      validate(fields()[22], value);
      this.IOPV = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'IOPV' field has been set.
      * @return True if the 'IOPV' field has been set, false otherwise.
      */
    public boolean hasIOPV() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'IOPV' field.
      * @return This builder.
      */
    public Builder clearIOPV() {
      IOPV = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFBuyNo' field.
      * @return The value.
      */
    public Integer getETFBuyNo() {
      return ETFBuyNo;
    }

    /**
      * Sets the value of the 'ETFBuyNo' field.
      * @param value The value of 'ETFBuyNo'.
      * @return This builder.
      */
    public Builder setETFBuyNo(Integer value) {
      validate(fields()[23], value);
      this.ETFBuyNo = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFBuyNo' field has been set.
      * @return True if the 'ETFBuyNo' field has been set, false otherwise.
      */
    public boolean hasETFBuyNo() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'ETFBuyNo' field.
      * @return This builder.
      */
    public Builder clearETFBuyNo() {
      ETFBuyNo = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFBuyVolume' field.
      * @return The value.
      */
    public Long getETFBuyVolume() {
      return ETFBuyVolume;
    }

    /**
      * Sets the value of the 'ETFBuyVolume' field.
      * @param value The value of 'ETFBuyVolume'.
      * @return This builder.
      */
    public Builder setETFBuyVolume(Long value) {
      validate(fields()[24], value);
      this.ETFBuyVolume = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFBuyVolume' field has been set.
      * @return True if the 'ETFBuyVolume' field has been set, false otherwise.
      */
    public boolean hasETFBuyVolume() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'ETFBuyVolume' field.
      * @return This builder.
      */
    public Builder clearETFBuyVolume() {
      ETFBuyVolume = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFBuyAmount' field.
      * @return The value.
      */
    public Double getETFBuyAmount() {
      return ETFBuyAmount;
    }

    /**
      * Sets the value of the 'ETFBuyAmount' field.
      * @param value The value of 'ETFBuyAmount'.
      * @return This builder.
      */
    public Builder setETFBuyAmount(Double value) {
      validate(fields()[25], value);
      this.ETFBuyAmount = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFBuyAmount' field has been set.
      * @return True if the 'ETFBuyAmount' field has been set, false otherwise.
      */
    public boolean hasETFBuyAmount() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'ETFBuyAmount' field.
      * @return This builder.
      */
    public Builder clearETFBuyAmount() {
      ETFBuyAmount = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFSellNo' field.
      * @return The value.
      */
    public Integer getETFSellNo() {
      return ETFSellNo;
    }

    /**
      * Sets the value of the 'ETFSellNo' field.
      * @param value The value of 'ETFSellNo'.
      * @return This builder.
      */
    public Builder setETFSellNo(Integer value) {
      validate(fields()[26], value);
      this.ETFSellNo = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFSellNo' field has been set.
      * @return True if the 'ETFSellNo' field has been set, false otherwise.
      */
    public boolean hasETFSellNo() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'ETFSellNo' field.
      * @return This builder.
      */
    public Builder clearETFSellNo() {
      ETFSellNo = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFSellVolume' field.
      * @return The value.
      */
    public Long getETFSellVolume() {
      return ETFSellVolume;
    }

    /**
      * Sets the value of the 'ETFSellVolume' field.
      * @param value The value of 'ETFSellVolume'.
      * @return This builder.
      */
    public Builder setETFSellVolume(Long value) {
      validate(fields()[27], value);
      this.ETFSellVolume = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFSellVolume' field has been set.
      * @return True if the 'ETFSellVolume' field has been set, false otherwise.
      */
    public boolean hasETFSellVolume() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'ETFSellVolume' field.
      * @return This builder.
      */
    public Builder clearETFSellVolume() {
      ETFSellVolume = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'ETFSellAmount' field.
      * @return The value.
      */
    public Double getETFSellAmount() {
      return ETFSellAmount;
    }

    /**
      * Sets the value of the 'ETFSellAmount' field.
      * @param value The value of 'ETFSellAmount'.
      * @return This builder.
      */
    public Builder setETFSellAmount(Double value) {
      validate(fields()[28], value);
      this.ETFSellAmount = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'ETFSellAmount' field has been set.
      * @return True if the 'ETFSellAmount' field has been set, false otherwise.
      */
    public boolean hasETFSellAmount() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'ETFSellAmount' field.
      * @return This builder.
      */
    public Builder clearETFSellAmount() {
      ETFSellAmount = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'YTM' field.
      * @return The value.
      */
    public Double getYTM() {
      return YTM;
    }

    /**
      * Sets the value of the 'YTM' field.
      * @param value The value of 'YTM'.
      * @return This builder.
      */
    public Builder setYTM(Double value) {
      validate(fields()[29], value);
      this.YTM = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'YTM' field has been set.
      * @return True if the 'YTM' field has been set, false otherwise.
      */
    public boolean hasYTM() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'YTM' field.
      * @return This builder.
      */
    public Builder clearYTM() {
      YTM = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalWarrantExecVol' field.
      * @return The value.
      */
    public Long getTotalWarrantExecVol() {
      return TotalWarrantExecVol;
    }

    /**
      * Sets the value of the 'TotalWarrantExecVol' field.
      * @param value The value of 'TotalWarrantExecVol'.
      * @return This builder.
      */
    public Builder setTotalWarrantExecVol(Long value) {
      validate(fields()[30], value);
      this.TotalWarrantExecVol = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalWarrantExecVol' field has been set.
      * @return True if the 'TotalWarrantExecVol' field has been set, false otherwise.
      */
    public boolean hasTotalWarrantExecVol() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'TotalWarrantExecVol' field.
      * @return This builder.
      */
    public Builder clearTotalWarrantExecVol() {
      TotalWarrantExecVol = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'WarrantDownLimit' field.
      * @return The value.
      */
    public Double getWarrantDownLimit() {
      return WarrantDownLimit;
    }

    /**
      * Sets the value of the 'WarrantDownLimit' field.
      * @param value The value of 'WarrantDownLimit'.
      * @return This builder.
      */
    public Builder setWarrantDownLimit(Double value) {
      validate(fields()[31], value);
      this.WarrantDownLimit = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'WarrantDownLimit' field has been set.
      * @return True if the 'WarrantDownLimit' field has been set, false otherwise.
      */
    public boolean hasWarrantDownLimit() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'WarrantDownLimit' field.
      * @return This builder.
      */
    public Builder clearWarrantDownLimit() {
      WarrantDownLimit = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'WarrantUpLimit' field.
      * @return The value.
      */
    public Double getWarrantUpLimit() {
      return WarrantUpLimit;
    }

    /**
      * Sets the value of the 'WarrantUpLimit' field.
      * @param value The value of 'WarrantUpLimit'.
      * @return This builder.
      */
    public Builder setWarrantUpLimit(Double value) {
      validate(fields()[32], value);
      this.WarrantUpLimit = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'WarrantUpLimit' field has been set.
      * @return True if the 'WarrantUpLimit' field has been set, false otherwise.
      */
    public boolean hasWarrantUpLimit() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'WarrantUpLimit' field.
      * @return This builder.
      */
    public Builder clearWarrantUpLimit() {
      WarrantUpLimit = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawBuyNo' field.
      * @return The value.
      */
    public Integer getWithdrawBuyNo() {
      return WithdrawBuyNo;
    }

    /**
      * Sets the value of the 'WithdrawBuyNo' field.
      * @param value The value of 'WithdrawBuyNo'.
      * @return This builder.
      */
    public Builder setWithdrawBuyNo(Integer value) {
      validate(fields()[33], value);
      this.WithdrawBuyNo = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawBuyNo' field has been set.
      * @return True if the 'WithdrawBuyNo' field has been set, false otherwise.
      */
    public boolean hasWithdrawBuyNo() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'WithdrawBuyNo' field.
      * @return This builder.
      */
    public Builder clearWithdrawBuyNo() {
      WithdrawBuyNo = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawBuyVolume' field.
      * @return The value.
      */
    public Long getWithdrawBuyVolume() {
      return WithdrawBuyVolume;
    }

    /**
      * Sets the value of the 'WithdrawBuyVolume' field.
      * @param value The value of 'WithdrawBuyVolume'.
      * @return This builder.
      */
    public Builder setWithdrawBuyVolume(Long value) {
      validate(fields()[34], value);
      this.WithdrawBuyVolume = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawBuyVolume' field has been set.
      * @return True if the 'WithdrawBuyVolume' field has been set, false otherwise.
      */
    public boolean hasWithdrawBuyVolume() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'WithdrawBuyVolume' field.
      * @return This builder.
      */
    public Builder clearWithdrawBuyVolume() {
      WithdrawBuyVolume = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawBuyAmount' field.
      * @return The value.
      */
    public Double getWithdrawBuyAmount() {
      return WithdrawBuyAmount;
    }

    /**
      * Sets the value of the 'WithdrawBuyAmount' field.
      * @param value The value of 'WithdrawBuyAmount'.
      * @return This builder.
      */
    public Builder setWithdrawBuyAmount(Double value) {
      validate(fields()[35], value);
      this.WithdrawBuyAmount = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawBuyAmount' field has been set.
      * @return True if the 'WithdrawBuyAmount' field has been set, false otherwise.
      */
    public boolean hasWithdrawBuyAmount() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'WithdrawBuyAmount' field.
      * @return This builder.
      */
    public Builder clearWithdrawBuyAmount() {
      WithdrawBuyAmount = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawSellNo' field.
      * @return The value.
      */
    public Integer getWithdrawSellNo() {
      return WithdrawSellNo;
    }

    /**
      * Sets the value of the 'WithdrawSellNo' field.
      * @param value The value of 'WithdrawSellNo'.
      * @return This builder.
      */
    public Builder setWithdrawSellNo(Integer value) {
      validate(fields()[36], value);
      this.WithdrawSellNo = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawSellNo' field has been set.
      * @return True if the 'WithdrawSellNo' field has been set, false otherwise.
      */
    public boolean hasWithdrawSellNo() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'WithdrawSellNo' field.
      * @return This builder.
      */
    public Builder clearWithdrawSellNo() {
      WithdrawSellNo = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawSellVolume' field.
      * @return The value.
      */
    public Long getWithdrawSellVolume() {
      return WithdrawSellVolume;
    }

    /**
      * Sets the value of the 'WithdrawSellVolume' field.
      * @param value The value of 'WithdrawSellVolume'.
      * @return This builder.
      */
    public Builder setWithdrawSellVolume(Long value) {
      validate(fields()[37], value);
      this.WithdrawSellVolume = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawSellVolume' field has been set.
      * @return True if the 'WithdrawSellVolume' field has been set, false otherwise.
      */
    public boolean hasWithdrawSellVolume() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'WithdrawSellVolume' field.
      * @return This builder.
      */
    public Builder clearWithdrawSellVolume() {
      WithdrawSellVolume = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawSellAmount' field.
      * @return The value.
      */
    public Double getWithdrawSellAmount() {
      return WithdrawSellAmount;
    }

    /**
      * Sets the value of the 'WithdrawSellAmount' field.
      * @param value The value of 'WithdrawSellAmount'.
      * @return This builder.
      */
    public Builder setWithdrawSellAmount(Double value) {
      validate(fields()[38], value);
      this.WithdrawSellAmount = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawSellAmount' field has been set.
      * @return True if the 'WithdrawSellAmount' field has been set, false otherwise.
      */
    public boolean hasWithdrawSellAmount() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'WithdrawSellAmount' field.
      * @return This builder.
      */
    public Builder clearWithdrawSellAmount() {
      WithdrawSellAmount = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalBuyNo' field.
      * @return The value.
      */
    public Integer getTotalBuyNo() {
      return TotalBuyNo;
    }

    /**
      * Sets the value of the 'TotalBuyNo' field.
      * @param value The value of 'TotalBuyNo'.
      * @return This builder.
      */
    public Builder setTotalBuyNo(Integer value) {
      validate(fields()[39], value);
      this.TotalBuyNo = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalBuyNo' field has been set.
      * @return True if the 'TotalBuyNo' field has been set, false otherwise.
      */
    public boolean hasTotalBuyNo() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'TotalBuyNo' field.
      * @return This builder.
      */
    public Builder clearTotalBuyNo() {
      TotalBuyNo = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalSellNo' field.
      * @return The value.
      */
    public Integer getTotalSellNo() {
      return TotalSellNo;
    }

    /**
      * Sets the value of the 'TotalSellNo' field.
      * @param value The value of 'TotalSellNo'.
      * @return This builder.
      */
    public Builder setTotalSellNo(Integer value) {
      validate(fields()[40], value);
      this.TotalSellNo = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalSellNo' field has been set.
      * @return True if the 'TotalSellNo' field has been set, false otherwise.
      */
    public boolean hasTotalSellNo() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'TotalSellNo' field.
      * @return This builder.
      */
    public Builder clearTotalSellNo() {
      TotalSellNo = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'MaxBuyDuration' field.
      * @return The value.
      */
    public Integer getMaxBuyDuration() {
      return MaxBuyDuration;
    }

    /**
      * Sets the value of the 'MaxBuyDuration' field.
      * @param value The value of 'MaxBuyDuration'.
      * @return This builder.
      */
    public Builder setMaxBuyDuration(Integer value) {
      validate(fields()[41], value);
      this.MaxBuyDuration = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'MaxBuyDuration' field has been set.
      * @return True if the 'MaxBuyDuration' field has been set, false otherwise.
      */
    public boolean hasMaxBuyDuration() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'MaxBuyDuration' field.
      * @return This builder.
      */
    public Builder clearMaxBuyDuration() {
      MaxBuyDuration = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'MaxSellDuration' field.
      * @return The value.
      */
    public Integer getMaxSellDuration() {
      return MaxSellDuration;
    }

    /**
      * Sets the value of the 'MaxSellDuration' field.
      * @param value The value of 'MaxSellDuration'.
      * @return This builder.
      */
    public Builder setMaxSellDuration(Integer value) {
      validate(fields()[42], value);
      this.MaxSellDuration = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'MaxSellDuration' field has been set.
      * @return True if the 'MaxSellDuration' field has been set, false otherwise.
      */
    public boolean hasMaxSellDuration() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'MaxSellDuration' field.
      * @return This builder.
      */
    public Builder clearMaxSellDuration() {
      MaxSellDuration = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyOrderNo' field.
      * @return The value.
      */
    public Integer getBuyOrderNo() {
      return BuyOrderNo;
    }

    /**
      * Sets the value of the 'BuyOrderNo' field.
      * @param value The value of 'BuyOrderNo'.
      * @return This builder.
      */
    public Builder setBuyOrderNo(Integer value) {
      validate(fields()[43], value);
      this.BuyOrderNo = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyOrderNo' field has been set.
      * @return True if the 'BuyOrderNo' field has been set, false otherwise.
      */
    public boolean hasBuyOrderNo() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'BuyOrderNo' field.
      * @return This builder.
      */
    public Builder clearBuyOrderNo() {
      BuyOrderNo = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellOrderNo' field.
      * @return The value.
      */
    public Integer getSellOrderNo() {
      return SellOrderNo;
    }

    /**
      * Sets the value of the 'SellOrderNo' field.
      * @param value The value of 'SellOrderNo'.
      * @return This builder.
      */
    public Builder setSellOrderNo(Integer value) {
      validate(fields()[44], value);
      this.SellOrderNo = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'SellOrderNo' field has been set.
      * @return True if the 'SellOrderNo' field has been set, false otherwise.
      */
    public boolean hasSellOrderNo() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'SellOrderNo' field.
      * @return This builder.
      */
    public Builder clearSellOrderNo() {
      SellOrderNo = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevelNo' field.
      * @return The value.
      */
    public Integer getSellLevelNo() {
      return SellLevelNo;
    }

    /**
      * Sets the value of the 'SellLevelNo' field.
      * @param value The value of 'SellLevelNo'.
      * @return This builder.
      */
    public Builder setSellLevelNo(Integer value) {
      validate(fields()[45], value);
      this.SellLevelNo = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevelNo' field has been set.
      * @return True if the 'SellLevelNo' field has been set, false otherwise.
      */
    public boolean hasSellLevelNo() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'SellLevelNo' field.
      * @return This builder.
      */
    public Builder clearSellLevelNo() {
      SellLevelNo = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevel_price' field.
      * @return The value.
      */
    public java.util.List<Double> getSellLevelPrice() {
      return SellLevel_price;
    }

    /**
      * Sets the value of the 'SellLevel_price' field.
      * @param value The value of 'SellLevel_price'.
      * @return This builder.
      */
    public Builder setSellLevelPrice(java.util.List<Double> value) {
      validate(fields()[46], value);
      this.SellLevel_price = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevel_price' field has been set.
      * @return True if the 'SellLevel_price' field has been set, false otherwise.
      */
    public boolean hasSellLevelPrice() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'SellLevel_price' field.
      * @return This builder.
      */
    public Builder clearSellLevelPrice() {
      SellLevel_price = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevel_TotalOrderNo' field.
      * @return The value.
      */
    public java.util.List<Long> getSellLevelTotalOrderNo() {
      return SellLevel_TotalOrderNo;
    }

    /**
      * Sets the value of the 'SellLevel_TotalOrderNo' field.
      * @param value The value of 'SellLevel_TotalOrderNo'.
      * @return This builder.
      */
    public Builder setSellLevelTotalOrderNo(java.util.List<Long> value) {
      validate(fields()[47], value);
      this.SellLevel_TotalOrderNo = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevel_TotalOrderNo' field has been set.
      * @return True if the 'SellLevel_TotalOrderNo' field has been set, false otherwise.
      */
    public boolean hasSellLevelTotalOrderNo() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'SellLevel_TotalOrderNo' field.
      * @return This builder.
      */
    public Builder clearSellLevelTotalOrderNo() {
      SellLevel_TotalOrderNo = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevel_Volume' field.
      * @return The value.
      */
    public java.util.List<Double> getSellLevelVolume() {
      return SellLevel_Volume;
    }

    /**
      * Sets the value of the 'SellLevel_Volume' field.
      * @param value The value of 'SellLevel_Volume'.
      * @return This builder.
      */
    public Builder setSellLevelVolume(java.util.List<Double> value) {
      validate(fields()[48], value);
      this.SellLevel_Volume = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevel_Volume' field has been set.
      * @return True if the 'SellLevel_Volume' field has been set, false otherwise.
      */
    public boolean hasSellLevelVolume() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'SellLevel_Volume' field.
      * @return This builder.
      */
    public Builder clearSellLevelVolume() {
      SellLevel_Volume = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevelQueueNo01' field.
      * @return The value.
      */
    public Integer getSellLevelQueueNo01() {
      return SellLevelQueueNo01;
    }

    /**
      * Sets the value of the 'SellLevelQueueNo01' field.
      * @param value The value of 'SellLevelQueueNo01'.
      * @return This builder.
      */
    public Builder setSellLevelQueueNo01(Integer value) {
      validate(fields()[49], value);
      this.SellLevelQueueNo01 = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevelQueueNo01' field has been set.
      * @return True if the 'SellLevelQueueNo01' field has been set, false otherwise.
      */
    public boolean hasSellLevelQueueNo01() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'SellLevelQueueNo01' field.
      * @return This builder.
      */
    public Builder clearSellLevelQueueNo01() {
      SellLevelQueueNo01 = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellLevelQueue' field.
      * @return The value.
      */
    public java.util.List<Double> getSellLevelQueue() {
      return SellLevelQueue;
    }

    /**
      * Sets the value of the 'SellLevelQueue' field.
      * @param value The value of 'SellLevelQueue'.
      * @return This builder.
      */
    public Builder setSellLevelQueue(java.util.List<Double> value) {
      validate(fields()[50], value);
      this.SellLevelQueue = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'SellLevelQueue' field has been set.
      * @return True if the 'SellLevelQueue' field has been set, false otherwise.
      */
    public boolean hasSellLevelQueue() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'SellLevelQueue' field.
      * @return This builder.
      */
    public Builder clearSellLevelQueue() {
      SellLevelQueue = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevelNo' field.
      * @return The value.
      */
    public Integer getBuyLevelNo() {
      return BuyLevelNo;
    }

    /**
      * Sets the value of the 'BuyLevelNo' field.
      * @param value The value of 'BuyLevelNo'.
      * @return This builder.
      */
    public Builder setBuyLevelNo(Integer value) {
      validate(fields()[51], value);
      this.BuyLevelNo = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevelNo' field has been set.
      * @return True if the 'BuyLevelNo' field has been set, false otherwise.
      */
    public boolean hasBuyLevelNo() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'BuyLevelNo' field.
      * @return This builder.
      */
    public Builder clearBuyLevelNo() {
      BuyLevelNo = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevel_price' field.
      * @return The value.
      */
    public java.util.List<Double> getBuyLevelPrice() {
      return BuyLevel_price;
    }

    /**
      * Sets the value of the 'BuyLevel_price' field.
      * @param value The value of 'BuyLevel_price'.
      * @return This builder.
      */
    public Builder setBuyLevelPrice(java.util.List<Double> value) {
      validate(fields()[52], value);
      this.BuyLevel_price = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevel_price' field has been set.
      * @return True if the 'BuyLevel_price' field has been set, false otherwise.
      */
    public boolean hasBuyLevelPrice() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'BuyLevel_price' field.
      * @return This builder.
      */
    public Builder clearBuyLevelPrice() {
      BuyLevel_price = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevel_TotalOrderNo' field.
      * @return The value.
      */
    public java.util.List<Long> getBuyLevelTotalOrderNo() {
      return BuyLevel_TotalOrderNo;
    }

    /**
      * Sets the value of the 'BuyLevel_TotalOrderNo' field.
      * @param value The value of 'BuyLevel_TotalOrderNo'.
      * @return This builder.
      */
    public Builder setBuyLevelTotalOrderNo(java.util.List<Long> value) {
      validate(fields()[53], value);
      this.BuyLevel_TotalOrderNo = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevel_TotalOrderNo' field has been set.
      * @return True if the 'BuyLevel_TotalOrderNo' field has been set, false otherwise.
      */
    public boolean hasBuyLevelTotalOrderNo() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'BuyLevel_TotalOrderNo' field.
      * @return This builder.
      */
    public Builder clearBuyLevelTotalOrderNo() {
      BuyLevel_TotalOrderNo = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevel_Volume' field.
      * @return The value.
      */
    public java.util.List<Double> getBuyLevelVolume() {
      return BuyLevel_Volume;
    }

    /**
      * Sets the value of the 'BuyLevel_Volume' field.
      * @param value The value of 'BuyLevel_Volume'.
      * @return This builder.
      */
    public Builder setBuyLevelVolume(java.util.List<Double> value) {
      validate(fields()[54], value);
      this.BuyLevel_Volume = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevel_Volume' field has been set.
      * @return True if the 'BuyLevel_Volume' field has been set, false otherwise.
      */
    public boolean hasBuyLevelVolume() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'BuyLevel_Volume' field.
      * @return This builder.
      */
    public Builder clearBuyLevelVolume() {
      BuyLevel_Volume = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevelQueueNo01' field.
      * @return The value.
      */
    public Integer getBuyLevelQueueNo01() {
      return BuyLevelQueueNo01;
    }

    /**
      * Sets the value of the 'BuyLevelQueueNo01' field.
      * @param value The value of 'BuyLevelQueueNo01'.
      * @return This builder.
      */
    public Builder setBuyLevelQueueNo01(Integer value) {
      validate(fields()[55], value);
      this.BuyLevelQueueNo01 = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevelQueueNo01' field has been set.
      * @return True if the 'BuyLevelQueueNo01' field has been set, false otherwise.
      */
    public boolean hasBuyLevelQueueNo01() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'BuyLevelQueueNo01' field.
      * @return This builder.
      */
    public Builder clearBuyLevelQueueNo01() {
      BuyLevelQueueNo01 = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'BuyLevelQueue' field.
      * @return The value.
      */
    public java.util.List<Double> getBuyLevelQueue() {
      return BuyLevelQueue;
    }

    /**
      * Sets the value of the 'BuyLevelQueue' field.
      * @param value The value of 'BuyLevelQueue'.
      * @return This builder.
      */
    public Builder setBuyLevelQueue(java.util.List<Double> value) {
      validate(fields()[56], value);
      this.BuyLevelQueue = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'BuyLevelQueue' field has been set.
      * @return True if the 'BuyLevelQueue' field has been set, false otherwise.
      */
    public boolean hasBuyLevelQueue() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'BuyLevelQueue' field.
      * @return This builder.
      */
    public Builder clearBuyLevelQueue() {
      BuyLevelQueue = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'SymbolSource_SZ' field.
      * @return The value.
      */
    public CharSequence getSymbolSourceSZ() {
      return SymbolSource_SZ;
    }

    /**
      * Sets the value of the 'SymbolSource_SZ' field.
      * @param value The value of 'SymbolSource_SZ'.
      * @return This builder.
      */
    public Builder setSymbolSourceSZ(CharSequence value) {
      validate(fields()[57], value);
      this.SymbolSource_SZ = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'SymbolSource_SZ' field has been set.
      * @return True if the 'SymbolSource_SZ' field has been set, false otherwise.
      */
    public boolean hasSymbolSourceSZ() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'SymbolSource_SZ' field.
      * @return This builder.
      */
    public Builder clearSymbolSourceSZ() {
      SymbolSource_SZ = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'PriceUpLimit_SZ' field.
      * @return The value.
      */
    public Double getPriceUpLimitSZ() {
      return PriceUpLimit_SZ;
    }

    /**
      * Sets the value of the 'PriceUpLimit_SZ' field.
      * @param value The value of 'PriceUpLimit_SZ'.
      * @return This builder.
      */
    public Builder setPriceUpLimitSZ(Double value) {
      validate(fields()[58], value);
      this.PriceUpLimit_SZ = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'PriceUpLimit_SZ' field has been set.
      * @return True if the 'PriceUpLimit_SZ' field has been set, false otherwise.
      */
    public boolean hasPriceUpLimitSZ() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'PriceUpLimit_SZ' field.
      * @return This builder.
      */
    public Builder clearPriceUpLimitSZ() {
      PriceUpLimit_SZ = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'PriceDownLimit_SZ' field.
      * @return The value.
      */
    public Double getPriceDownLimitSZ() {
      return PriceDownLimit_SZ;
    }

    /**
      * Sets the value of the 'PriceDownLimit_SZ' field.
      * @param value The value of 'PriceDownLimit_SZ'.
      * @return This builder.
      */
    public Builder setPriceDownLimitSZ(Double value) {
      validate(fields()[59], value);
      this.PriceDownLimit_SZ = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'PriceDownLimit_SZ' field has been set.
      * @return True if the 'PriceDownLimit_SZ' field has been set, false otherwise.
      */
    public boolean hasPriceDownLimitSZ() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'PriceDownLimit_SZ' field.
      * @return This builder.
      */
    public Builder clearPriceDownLimitSZ() {
      PriceDownLimit_SZ = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'PriceUpdown1_SZ' field.
      * @return The value.
      */
    public Double getPriceUpdown1SZ() {
      return PriceUpdown1_SZ;
    }

    /**
      * Sets the value of the 'PriceUpdown1_SZ' field.
      * @param value The value of 'PriceUpdown1_SZ'.
      * @return This builder.
      */
    public Builder setPriceUpdown1SZ(Double value) {
      validate(fields()[60], value);
      this.PriceUpdown1_SZ = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'PriceUpdown1_SZ' field has been set.
      * @return True if the 'PriceUpdown1_SZ' field has been set, false otherwise.
      */
    public boolean hasPriceUpdown1SZ() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'PriceUpdown1_SZ' field.
      * @return This builder.
      */
    public Builder clearPriceUpdown1SZ() {
      PriceUpdown1_SZ = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'PriceUpdown2_SZ' field.
      * @return The value.
      */
    public Double getPriceUpdown2SZ() {
      return PriceUpdown2_SZ;
    }

    /**
      * Sets the value of the 'PriceUpdown2_SZ' field.
      * @param value The value of 'PriceUpdown2_SZ'.
      * @return This builder.
      */
    public Builder setPriceUpdown2SZ(Double value) {
      validate(fields()[61], value);
      this.PriceUpdown2_SZ = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'PriceUpdown2_SZ' field has been set.
      * @return True if the 'PriceUpdown2_SZ' field has been set, false otherwise.
      */
    public boolean hasPriceUpdown2SZ() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'PriceUpdown2_SZ' field.
      * @return This builder.
      */
    public Builder clearPriceUpdown2SZ() {
      PriceUpdown2_SZ = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'PERatio1_SZ' field.
      * @return The value.
      */
    public Double getPERatio1SZ() {
      return PERatio1_SZ;
    }

    /**
      * Sets the value of the 'PERatio1_SZ' field.
      * @param value The value of 'PERatio1_SZ'.
      * @return This builder.
      */
    public Builder setPERatio1SZ(Double value) {
      validate(fields()[62], value);
      this.PERatio1_SZ = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'PERatio1_SZ' field has been set.
      * @return True if the 'PERatio1_SZ' field has been set, false otherwise.
      */
    public boolean hasPERatio1SZ() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'PERatio1_SZ' field.
      * @return This builder.
      */
    public Builder clearPERatio1SZ() {
      PERatio1_SZ = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'NAV_SZ' field.
      * @return The value.
      */
    public Double getNAVSZ() {
      return NAV_SZ;
    }

    /**
      * Sets the value of the 'NAV_SZ' field.
      * @param value The value of 'NAV_SZ'.
      * @return This builder.
      */
    public Builder setNAVSZ(Double value) {
      validate(fields()[63], value);
      this.NAV_SZ = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'NAV_SZ' field has been set.
      * @return True if the 'NAV_SZ' field has been set, false otherwise.
      */
    public boolean hasNAVSZ() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'NAV_SZ' field.
      * @return This builder.
      */
    public Builder clearNAVSZ() {
      NAV_SZ = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'PERatio2_SZ' field.
      * @return The value.
      */
    public Double getPERatio2SZ() {
      return PERatio2_SZ;
    }

    /**
      * Sets the value of the 'PERatio2_SZ' field.
      * @param value The value of 'PERatio2_SZ'.
      * @return This builder.
      */
    public Builder setPERatio2SZ(Double value) {
      validate(fields()[64], value);
      this.PERatio2_SZ = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'PERatio2_SZ' field has been set.
      * @return True if the 'PERatio2_SZ' field has been set, false otherwise.
      */
    public boolean hasPERatio2SZ() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'PERatio2_SZ' field.
      * @return This builder.
      */
    public Builder clearPERatio2SZ() {
      PERatio2_SZ = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'PRemiumRate_SZ' field.
      * @return The value.
      */
    public Double getPRemiumRateSZ() {
      return PRemiumRate_SZ;
    }

    /**
      * Sets the value of the 'PRemiumRate_SZ' field.
      * @param value The value of 'PRemiumRate_SZ'.
      * @return This builder.
      */
    public Builder setPRemiumRateSZ(Double value) {
      validate(fields()[65], value);
      this.PRemiumRate_SZ = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'PRemiumRate_SZ' field has been set.
      * @return True if the 'PRemiumRate_SZ' field has been set, false otherwise.
      */
    public boolean hasPRemiumRateSZ() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'PRemiumRate_SZ' field.
      * @return This builder.
      */
    public Builder clearPRemiumRateSZ() {
      PRemiumRate_SZ = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    /**
      * Gets the value of the 'WtAvgRate_SZ' field.
      * @return The value.
      */
    public Double getWtAvgRateSZ() {
      return WtAvgRate_SZ;
    }

    /**
      * Sets the value of the 'WtAvgRate_SZ' field.
      * @param value The value of 'WtAvgRate_SZ'.
      * @return This builder.
      */
    public Builder setWtAvgRateSZ(Double value) {
      validate(fields()[66], value);
      this.WtAvgRate_SZ = value;
      fieldSetFlags()[66] = true;
      return this;
    }

    /**
      * Checks whether the 'WtAvgRate_SZ' field has been set.
      * @return True if the 'WtAvgRate_SZ' field has been set, false otherwise.
      */
    public boolean hasWtAvgRateSZ() {
      return fieldSetFlags()[66];
    }


    /**
      * Clears the value of the 'WtAvgRate_SZ' field.
      * @return This builder.
      */
    public Builder clearWtAvgRateSZ() {
      WtAvgRate_SZ = null;
      fieldSetFlags()[66] = false;
      return this;
    }

    /**
      * Gets the value of the 'WtAvgRateUpdown_SZ' field.
      * @return The value.
      */
    public Double getWtAvgRateUpdownSZ() {
      return WtAvgRateUpdown_SZ;
    }

    /**
      * Sets the value of the 'WtAvgRateUpdown_SZ' field.
      * @param value The value of 'WtAvgRateUpdown_SZ'.
      * @return This builder.
      */
    public Builder setWtAvgRateUpdownSZ(Double value) {
      validate(fields()[67], value);
      this.WtAvgRateUpdown_SZ = value;
      fieldSetFlags()[67] = true;
      return this;
    }

    /**
      * Checks whether the 'WtAvgRateUpdown_SZ' field has been set.
      * @return True if the 'WtAvgRateUpdown_SZ' field has been set, false otherwise.
      */
    public boolean hasWtAvgRateUpdownSZ() {
      return fieldSetFlags()[67];
    }


    /**
      * Clears the value of the 'WtAvgRateUpdown_SZ' field.
      * @return This builder.
      */
    public Builder clearWtAvgRateUpdownSZ() {
      WtAvgRateUpdown_SZ = null;
      fieldSetFlags()[67] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreWtAvgRate_SZ' field.
      * @return The value.
      */
    public Double getPreWtAvgRateSZ() {
      return PreWtAvgRate_SZ;
    }

    /**
      * Sets the value of the 'PreWtAvgRate_SZ' field.
      * @param value The value of 'PreWtAvgRate_SZ'.
      * @return This builder.
      */
    public Builder setPreWtAvgRateSZ(Double value) {
      validate(fields()[68], value);
      this.PreWtAvgRate_SZ = value;
      fieldSetFlags()[68] = true;
      return this;
    }

    /**
      * Checks whether the 'PreWtAvgRate_SZ' field has been set.
      * @return True if the 'PreWtAvgRate_SZ' field has been set, false otherwise.
      */
    public boolean hasPreWtAvgRateSZ() {
      return fieldSetFlags()[68];
    }


    /**
      * Clears the value of the 'PreWtAvgRate_SZ' field.
      * @return This builder.
      */
    public Builder clearPreWtAvgRateSZ() {
      PreWtAvgRate_SZ = null;
      fieldSetFlags()[68] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public HangQing build() {
      try {
        HangQing record = new HangQing();
        record.LocalTimeStamp = fieldSetFlags()[0] ? this.LocalTimeStamp : (Integer) defaultValue(fields()[0]);
        record.QuotationFlag = fieldSetFlags()[1] ? this.QuotationFlag : (CharSequence) defaultValue(fields()[1]);
        record.PacketTimeStampSH = fieldSetFlags()[2] ? this.PacketTimeStampSH : (Long) defaultValue(fields()[2]);
        record.Time = fieldSetFlags()[3] ? this.Time : (Long) defaultValue(fields()[3]);
        record.Symbol = fieldSetFlags()[4] ? this.Symbol : (CharSequence) defaultValue(fields()[4]);
        record.PreClosePrice = fieldSetFlags()[5] ? this.PreClosePrice : (Double) defaultValue(fields()[5]);
        record.OpenPrice = fieldSetFlags()[6] ? this.OpenPrice : (Double) defaultValue(fields()[6]);
        record.HighPrice = fieldSetFlags()[7] ? this.HighPrice : (Double) defaultValue(fields()[7]);
        record.LowPrice = fieldSetFlags()[8] ? this.LowPrice : (Double) defaultValue(fields()[8]);
        record.LastPrice = fieldSetFlags()[9] ? this.LastPrice : (Double) defaultValue(fields()[9]);
        record.ClosePrice = fieldSetFlags()[10] ? this.ClosePrice : (Double) defaultValue(fields()[10]);
        record.TradeStatus = fieldSetFlags()[11] ? this.TradeStatus : (CharSequence) defaultValue(fields()[11]);
        record.SecurityPhaseTag = fieldSetFlags()[12] ? this.SecurityPhaseTag : (CharSequence) defaultValue(fields()[12]);
        record.TotalNo = fieldSetFlags()[13] ? this.TotalNo : (Long) defaultValue(fields()[13]);
        record.TotalVolume = fieldSetFlags()[14] ? this.TotalVolume : (Double) defaultValue(fields()[14]);
        record.TotalAmount = fieldSetFlags()[15] ? this.TotalAmount : (Double) defaultValue(fields()[15]);
        record.TotalBuyOrderVolume = fieldSetFlags()[16] ? this.TotalBuyOrderVolume : (Double) defaultValue(fields()[16]);
        record.WtAvgBuyPrice = fieldSetFlags()[17] ? this.WtAvgBuyPrice : (Double) defaultValue(fields()[17]);
        record.BondWtAvgBuyPrice = fieldSetFlags()[18] ? this.BondWtAvgBuyPrice : (Double) defaultValue(fields()[18]);
        record.TotalSellOrderVolume = fieldSetFlags()[19] ? this.TotalSellOrderVolume : (Double) defaultValue(fields()[19]);
        record.WtAvgSellPrice = fieldSetFlags()[20] ? this.WtAvgSellPrice : (Double) defaultValue(fields()[20]);
        record.BongWtAvgSellPrice = fieldSetFlags()[21] ? this.BongWtAvgSellPrice : (Double) defaultValue(fields()[21]);
        record.IOPV = fieldSetFlags()[22] ? this.IOPV : (Double) defaultValue(fields()[22]);
        record.ETFBuyNo = fieldSetFlags()[23] ? this.ETFBuyNo : (Integer) defaultValue(fields()[23]);
        record.ETFBuyVolume = fieldSetFlags()[24] ? this.ETFBuyVolume : (Long) defaultValue(fields()[24]);
        record.ETFBuyAmount = fieldSetFlags()[25] ? this.ETFBuyAmount : (Double) defaultValue(fields()[25]);
        record.ETFSellNo = fieldSetFlags()[26] ? this.ETFSellNo : (Integer) defaultValue(fields()[26]);
        record.ETFSellVolume = fieldSetFlags()[27] ? this.ETFSellVolume : (Long) defaultValue(fields()[27]);
        record.ETFSellAmount = fieldSetFlags()[28] ? this.ETFSellAmount : (Double) defaultValue(fields()[28]);
        record.YTM = fieldSetFlags()[29] ? this.YTM : (Double) defaultValue(fields()[29]);
        record.TotalWarrantExecVol = fieldSetFlags()[30] ? this.TotalWarrantExecVol : (Long) defaultValue(fields()[30]);
        record.WarrantDownLimit = fieldSetFlags()[31] ? this.WarrantDownLimit : (Double) defaultValue(fields()[31]);
        record.WarrantUpLimit = fieldSetFlags()[32] ? this.WarrantUpLimit : (Double) defaultValue(fields()[32]);
        record.WithdrawBuyNo = fieldSetFlags()[33] ? this.WithdrawBuyNo : (Integer) defaultValue(fields()[33]);
        record.WithdrawBuyVolume = fieldSetFlags()[34] ? this.WithdrawBuyVolume : (Long) defaultValue(fields()[34]);
        record.WithdrawBuyAmount = fieldSetFlags()[35] ? this.WithdrawBuyAmount : (Double) defaultValue(fields()[35]);
        record.WithdrawSellNo = fieldSetFlags()[36] ? this.WithdrawSellNo : (Integer) defaultValue(fields()[36]);
        record.WithdrawSellVolume = fieldSetFlags()[37] ? this.WithdrawSellVolume : (Long) defaultValue(fields()[37]);
        record.WithdrawSellAmount = fieldSetFlags()[38] ? this.WithdrawSellAmount : (Double) defaultValue(fields()[38]);
        record.TotalBuyNo = fieldSetFlags()[39] ? this.TotalBuyNo : (Integer) defaultValue(fields()[39]);
        record.TotalSellNo = fieldSetFlags()[40] ? this.TotalSellNo : (Integer) defaultValue(fields()[40]);
        record.MaxBuyDuration = fieldSetFlags()[41] ? this.MaxBuyDuration : (Integer) defaultValue(fields()[41]);
        record.MaxSellDuration = fieldSetFlags()[42] ? this.MaxSellDuration : (Integer) defaultValue(fields()[42]);
        record.BuyOrderNo = fieldSetFlags()[43] ? this.BuyOrderNo : (Integer) defaultValue(fields()[43]);
        record.SellOrderNo = fieldSetFlags()[44] ? this.SellOrderNo : (Integer) defaultValue(fields()[44]);
        record.SellLevelNo = fieldSetFlags()[45] ? this.SellLevelNo : (Integer) defaultValue(fields()[45]);
        record.SellLevel_price = fieldSetFlags()[46] ? this.SellLevel_price : (java.util.List<Double>) defaultValue(fields()[46]);
        record.SellLevel_TotalOrderNo = fieldSetFlags()[47] ? this.SellLevel_TotalOrderNo : (java.util.List<Long>) defaultValue(fields()[47]);
        record.SellLevel_Volume = fieldSetFlags()[48] ? this.SellLevel_Volume : (java.util.List<Double>) defaultValue(fields()[48]);
        record.SellLevelQueueNo01 = fieldSetFlags()[49] ? this.SellLevelQueueNo01 : (Integer) defaultValue(fields()[49]);
        record.SellLevelQueue = fieldSetFlags()[50] ? this.SellLevelQueue : (java.util.List<Double>) defaultValue(fields()[50]);
        record.BuyLevelNo = fieldSetFlags()[51] ? this.BuyLevelNo : (Integer) defaultValue(fields()[51]);
        record.BuyLevel_price = fieldSetFlags()[52] ? this.BuyLevel_price : (java.util.List<Double>) defaultValue(fields()[52]);
        record.BuyLevel_TotalOrderNo = fieldSetFlags()[53] ? this.BuyLevel_TotalOrderNo : (java.util.List<Long>) defaultValue(fields()[53]);
        record.BuyLevel_Volume = fieldSetFlags()[54] ? this.BuyLevel_Volume : (java.util.List<Double>) defaultValue(fields()[54]);
        record.BuyLevelQueueNo01 = fieldSetFlags()[55] ? this.BuyLevelQueueNo01 : (Integer) defaultValue(fields()[55]);
        record.BuyLevelQueue = fieldSetFlags()[56] ? this.BuyLevelQueue : (java.util.List<Double>) defaultValue(fields()[56]);
        record.SymbolSource_SZ = fieldSetFlags()[57] ? this.SymbolSource_SZ : (CharSequence) defaultValue(fields()[57]);
        record.PriceUpLimit_SZ = fieldSetFlags()[58] ? this.PriceUpLimit_SZ : (Double) defaultValue(fields()[58]);
        record.PriceDownLimit_SZ = fieldSetFlags()[59] ? this.PriceDownLimit_SZ : (Double) defaultValue(fields()[59]);
        record.PriceUpdown1_SZ = fieldSetFlags()[60] ? this.PriceUpdown1_SZ : (Double) defaultValue(fields()[60]);
        record.PriceUpdown2_SZ = fieldSetFlags()[61] ? this.PriceUpdown2_SZ : (Double) defaultValue(fields()[61]);
        record.PERatio1_SZ = fieldSetFlags()[62] ? this.PERatio1_SZ : (Double) defaultValue(fields()[62]);
        record.NAV_SZ = fieldSetFlags()[63] ? this.NAV_SZ : (Double) defaultValue(fields()[63]);
        record.PERatio2_SZ = fieldSetFlags()[64] ? this.PERatio2_SZ : (Double) defaultValue(fields()[64]);
        record.PRemiumRate_SZ = fieldSetFlags()[65] ? this.PRemiumRate_SZ : (Double) defaultValue(fields()[65]);
        record.WtAvgRate_SZ = fieldSetFlags()[66] ? this.WtAvgRate_SZ : (Double) defaultValue(fields()[66]);
        record.WtAvgRateUpdown_SZ = fieldSetFlags()[67] ? this.WtAvgRateUpdown_SZ : (Double) defaultValue(fields()[67]);
        record.PreWtAvgRate_SZ = fieldSetFlags()[68] ? this.PreWtAvgRate_SZ : (Double) defaultValue(fields()[68]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HangQing>
    WRITER$ = (org.apache.avro.io.DatumWriter<HangQing>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HangQing>
    READER$ = (org.apache.avro.io.DatumReader<HangQing>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
